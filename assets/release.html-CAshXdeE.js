import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,d as a,o as l}from"./app-BsJFc5Sj.js";const n={};function t(h,i){return l(),e("div",null,i[0]||(i[0]=[a(`<h1 id="更新日志" tabindex="-1"><a class="header-anchor" href="#更新日志"><span>更新日志</span></a></h1><p><strong>维护版本：</strong></p><ul><li>go1.24，首次发布：2025-02-11，最后更新：go1.24.0 (2025-02-11)</li><li>go1.23，首次发布：2024-08-13，最后更新：go1.23.4 (2024-12-03)</li></ul><p>Go 语言官方更新日志：<a href="https://go.dev/doc/devel/release" target="_blank" rel="noopener noreferrer">Release History - The Go Programming Language</a></p><p>Go 官方采用语义化版本来进行版本标识，格式为 v<code>主版本</code>.<code>次版本</code>.<code>补丁版本</code> (见<a href="https://semver.org/lang/zh-CN/" target="_blank" rel="noopener noreferrer">Semantic Versioning</a>)，主版本的更新意味着发生了 Breaking Change，即无法向下兼容的更新，次版本的更新意味着有新功能添加同时保持向下兼容，补丁版本的更新意味着有问题被修复同时保持向下兼容。</p><p>Go 团队每半年发布一个二级版本，并且只有最新的两个二级版本是长期维护，维护时间都是六个月，鉴于 Go 每一次更新都保持着相当高的兼容性，建议在新版本稳定后及时将 Go 升级到最新版。</p><p>Go2.0 上一次提出草案是在 2018 年 11 月 19 日，那时还是处于 go1.13 版本，五年过后，版本已经迭代到了 go1.21，Go2.0 的各种想法已经通过增量更新的方式体现在了 Go1.0 上，创始人之一也曾明确表示未来可能并不会有 Go2.0，Go 将一直为保持向下兼容而努力(见<a href="https://go.dev/doc/go1compat" target="_blank" rel="noopener noreferrer">Go 1 and the Future of Go Programs</a>)。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>此页面只是对官方日志的一个简单搬运，不定期更新，想获取最新消息还请前往官网。</p></div><h2 id="_1-24" tabindex="-1"><a class="header-anchor" href="#_1-24"><span>1.24</span></a></h2><p>首次发布：2025-02-11</p><p>最后更新：go1.24.0 (2025-02-11)</p><p>go1.24 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.24" target="_blank" rel="noopener noreferrer">Go 1.24 Release Notes</a> 查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.24.0" target="_blank" rel="noopener noreferrer">Go1.24 - Release Patch</a>了解。</p><p><strong>语言层面</strong></p><ol><li><p>泛型类型别名，允许为泛型类型创建别名，这在引用第三方定义的泛型类型时非常有用，例如</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;other&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> MyQuque</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">T</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> any</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> other</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Queue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><strong>标准库</strong></p><ol><li>新增 <code>weak</code> 包：提供弱指针（Weak Pointers），允许对象在不增加引用计数的情况下被引用，避免缓存导致的内存泄漏，使用前需检查指针是否为 <code>nil</code></li><li>文件系统访问限制：引入 <code>os.Root</code> 类型，限制文件操作在特定目录内，增强安全性</li><li>加密与哈希支持：新增 <code>crypto/mlkem</code>，<code>crypto/hkdf</code>、<code>crypto/pbkdf2</code> 和 <code>crypto/sha3</code> 包，优化现有加密算法性能</li><li>新增基准测试函数 <code>testing.B.Loop</code>，以更好的进行循环测试</li><li><code>encoding/json</code> ：新增 <code>omitzero</code> 标签，支持基于 <code>IsZero()</code> 方法的零值过滤</li><li><code>strings</code> 和 <code>bytes</code>：新增迭代器函数（如 <code>Lines</code>、<code>SplitSeq</code>、<code>FieldsSeq</code>）</li></ol><p><strong>运行时</strong></p><ol><li>基于Swiss Tables重构内置map，大型map访问速度提升30%，迭代速度提升10%-60%</li><li><code>sync.Map</code> 改用并发哈希 Trie（hash-trie）以优化性能，尤其是在并发写的情况</li><li>运行时内部的互斥锁采用新的spinbit实现，降低了锁竞争，提升高并发场景性能</li><li>优化小对象分配策略，减少内存碎片和GC暂停时间</li><li>新增 <code>runtime.AddCleanup</code> 替代 <code>runtime.SetFinalizer</code>，支持为对象注册多个清理函数，并在独立 goroutine 中顺序执行</li></ol><p><strong>Cgo</strong></p><ol><li>支持 <code>#cgo noescape</code> 和 <code>#cgo nocallback</code> 注解，分别声明 C 函数不逃逸内存和不回调 Go 函数，提升运行时性能</li><li>Cgo 现在将拒绝编译对具有多个不兼容声明的 C 函数的调用，严格检测跨文件的不兼容 C 函数声明（如 <code>void f(int)</code> 和 <code>void f(double)</code>），避免生成错误调用序列</li></ol><p><strong>工具链</strong></p><ol><li>模块工具依赖管理：通过 go.mod 的 tool 指令跟踪工具依赖，替代传统的 tools.go 空导入方案</li><li>结构化输出：go build 和 go test 支持 -json 标志，输出 JSON 格式的构建和测试结果</li><li>编译与链接优化：编译器生成代码效率提升，链接器默认生成 GNU Build ID（ELF 平台）和 UUID（macOS）</li><li>禁止通过别名绕过对 CGO 生成类型的方法定义限制</li><li><code>go build</code> 自动嵌入版本控制系统信息到二进制文件（支持 <code>-buildvcs=false</code> 禁用）</li><li><code>GOAUTH</code> 环境变量支持私有模块认证。</li><li><code>go.mod</code> 支持 <code>tool</code> 指令管理可执行依赖，替代 <code>tools.go</code> 空白导入</li><li>新增 <code>go get -tool</code>参数 和 <code>go install tool</code> 命令管理模块工具依赖</li><li>构建缓存支持 <code>go run</code> 和 <code>go tool</code> 的二进制缓存</li><li><code>objdump</code> 支持 LoongArch、RISC-V、S390X 反汇编</li><li><code>vet</code> 新增 <code>tests</code> 分析器（检测测试函数签名错误）</li></ol><p><strong>平台兼容性</strong></p><ol><li>macOS：Go 1.24 为最后一个支持 macOS 11 Big Sur 的版本，Go 1.25 将要求 macOS 12+</li><li>Windows：将 32 位 ARM 架构标记为不完整的（GOOS=windows GOARCH=arm），见 <a href="https://golang.google.cn/issue/70705" target="_blank" rel="noopener noreferrer">issue #70705</a></li><li>Linux：最低内核版本要求升级至 3.2</li><li>要求 Go 1.22.6+ 作为引导工具链</li></ol><p><strong>废弃</strong></p><ol><li><code>math/rand.Seed()</code>彻底失效，需通过 <code>GODEBUG=randseednop=0</code> 恢复旧行为。</li><li><code>runtime.GOROOT()</code>标记为弃用，推荐通过<code>go env GOROOT</code>获取路径</li></ol><h2 id="_1-23" tabindex="-1"><a class="header-anchor" href="#_1-23"><span>1.23</span></a></h2><p>首次发布：2024-08-13</p><p>最后更新：go1.23.4 (2024-12-03)</p><p>go1.23 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.23" target="_blank" rel="noopener noreferrer">Go 1.23 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.23.0" target="_blank" rel="noopener noreferrer">Go1.23 - Release Patch</a>了解。</p><p><strong>语言层面</strong></p><ol><li><p>for range 支持迭代器函数，详细信息查看<a href="https://go.dev/wiki/RangefuncExperiment" target="_blank" rel="noopener noreferrer">Go Wiki: Rangefunc Experiment</a>。</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Upper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> []</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Seq2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">yield</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">s1</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> range</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      if</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> !</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yield</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">strings</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ToUpper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">s1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  sl</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> []</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;world&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;golang&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> range</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Upper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> : </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%s</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//0 : HELLO</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//1 : WORLD</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//2 : GOLANG</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是一个比较实用的特性，一般会结合泛型来用。</p></li></ol><p><strong>标准库</strong></p><ol><li><p>新增标准库<code>iter</code>，它定义和描述了关于迭代器的详细信息</p></li><li><p><code>maps</code>库新增了若干个迭代器函数</p></li><li><p><code>slices</code>库新增了若干个迭代器函数</p></li><li><p>新增<code>structs</code>库，提供了可以修改结构体属性的能力，比如内存布局</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> string</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Age</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  int</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  _</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    structs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">HostLayout</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>优化了<code>time</code>标准库的实现</p></li></ol><p><strong>Linker</strong></p><ol><li><p>处理<code>//go:linkname</code>的滥用，对于一些经常被引用的 API 暂时允许其存在，比如<code>runtime.memhash64</code>，<code>runtime.nanotime</code>等等，此后对于其他的新引用将不会允许。</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//go:linkname gcinit runtime.gcinit</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> gcinit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  gcinit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>像这种代码就无法通过编译</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>link: main: invalid reference to runtime.gcinit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><p><strong>工具链</strong></p><ol><li>新增<code>go telemetry</code> 命令用于遥测数据管理</li></ol><h2 id="_1-22" tabindex="-1"><a class="header-anchor" href="#_1-22"><span>1.22</span></a></h2><p>首次发布：2024-02-06</p><p>最后更新：go1.22.6（released 2024-08-06）</p><p>go1.22 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.22" target="_blank" rel="noopener noreferrer">Go 1.22 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.22.0" target="_blank" rel="noopener noreferrer">Go1.22 - Release Patch</a>了解。</p><p><strong>语言层面</strong></p><ol><li><p>解决了 go 语言循环变量的问题</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> wg</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">WaitGroup</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  const</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  wg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    go</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      wg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Done</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  wg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Wait</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这段代码在 1.22 前，会输出 10 个 9，在 1.22 后则会正常输出 0 到 9。</p></li><li><p><code>for range</code>现在支持迭代数字类型，如下</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> range</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><strong>标准库</strong></p><ol><li><p>增强了<code>net/http</code>标准库的路由</p></li><li><p><code>database/sql</code>新增了<code>sql.Null</code>泛型类型</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">T</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> any</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  V</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">     T</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Valid</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> bool</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用如下</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Name</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> sql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Age</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  sql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_1-21" tabindex="-1"><a class="header-anchor" href="#_1-21"><span>1.21</span></a></h2><p>首次发布：2023-08-08</p><p>最后更新：go1.21.13 (released 2024-08-06)</p><p>go1.21 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.21" target="_blank" rel="noopener noreferrer">Go 1.21 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.21.0" target="_blank" rel="noopener noreferrer">Go1.21 - Release Patch</a>了解。</p><p><strong>语言层面</strong></p><ol><li><p>新增了两个内置函数<code>min</code> ，<code>max</code>，用于计算最大值最小值。</p></li><li><p>新增内置函数<code>clear</code>，用于清空 map 和 slice</p></li><li><p>更新了<code>package</code>初始化顺序</p><ul><li>按导入路径对所有包进行排序</li><li>重复执行，直到包的列表为空</li><li>找到列表中所有的导入都已被初始化的第一个包</li><li>初始化该包并将其从列表中删除</li></ul></li><li><p>提高和改进了类型推理的能力和精度，主要是泛型相关。</p></li><li><p>推出了<code>for range</code>循环变量改进的预览版本，这是一个困扰了 Go 开发者接近十年的问题，官方终于要解决了，详情见：<a href="https://github.com/golang/go/wiki/LoopvarExperiment" target="_blank" rel="noopener noreferrer">LoopvarExperiment · golang/go Wiki (github.com)</a>和<a href="https://go.googlesource.com/proposal/+/master/design/60078-loopvar.md" target="_blank" rel="noopener noreferrer">Proposal: Less Error-Prone Loop Variable Scoping (googlesource.com)</a></p></li><li><p>保证了<code>recover</code>的返回值不会是<code>nil</code>，如果在调用<code>panic</code>时参数为<code>nil</code>，则会触发另一个<code>panic</code>，返回<code>*runtime.PanicNilError</code>。为了兼容性，在编译时设置<code>GODEBUG=panicnil=1</code>允许向<code>panic</code>传入<code>nil</code>。</p></li></ol><p><strong>标准库</strong></p><ol><li>新增<code>log/slog</code>库，提供标准的结构化日志库</li><li>新增<code>testing/slogtest</code>库，用于验证<code>slog.Handler</code>的实现</li><li>新增<code>slices</code>库，提供了一系列泛型函数用于操作切片。</li><li>新增<code>maps</code>库，提供了一系列泛型函数用于操作 map</li><li>新增<code>cmp</code>库，用于比较有序类型。</li></ol><p><strong>其他</strong></p><ol><li>go1.21.0 至少在 windows 系统上至少需要 win10 或者 Windows Server 2016 版本以上才能运行，先前的版本不再支持。</li><li>go1.21.0 至少需要在 macOS 10.15 Catalina 或者更新的版本才能运行，先前的版本不再支持。</li><li>新增了实验性的 WebAssembly System Interface，Go 依旧在 WASM 这块不断的探索。</li><li>在 1.20 还是实验性质的(Profile-guide optimization)PGO(见<a href="https://go.dev/doc/pgo" target="_blank" rel="noopener noreferrer">Profile-guided optimization - The Go Programming Language</a>)，1.21 版本正式启用。在 main 包下包含<code>default.pgo</code>文件会启用该功能，开启后性能可能会提升 2%-7%。</li><li>当打印非常深的运行时调用栈时，从原来的只打印前一百个帧，到现在分别打印前 50 的最后的 50 个帧。</li><li>优化了在 Unix 平台 CGO 的调用性能，从 1-3 微秒优化到了现在的 100-200 纳秒。</li><li>在 1.21 版本，编译速度提升了接近 6%，这主要归功于编译器本身使用 PGO 来构建。</li></ol><h2 id="_1-20" tabindex="-1"><a class="header-anchor" href="#_1-20"><span>1.20</span></a></h2><p>首次发布：2023-02-01</p><p>最后更新：go1.20.14 (released 2024-02-06)</p><p>go1.20 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.20" target="_blank" rel="noopener noreferrer">Go 1.20 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.20" target="_blank" rel="noopener noreferrer">Go1.20 - Release Patch</a>了解。</p><p><strong>语言层面</strong></p><ol><li>在将切片类型转换为数组时，原来需要对指针数组解引用<code>*(*[4byte])(x)</code>来避免和切片操作同一个底层数组，现在可以直接这么写<code>[4]byte(x)</code>。</li><li><code>unsafe</code>新增了<code>SliceData</code>，<code>String</code>，<code>StringData</code>函数，用于构建和结构切片与字符串值。</li></ol><p><strong>标准库</strong></p><ol><li>新增<code>crypto/ecdh</code>库，提供了对于 ECDH(Elliptic Curve Diffie-Hellman，一种非对称加密方法)的支持。</li><li>go1.20 扩展了对 error 包装的支持，允许一个 error 包装多个 error。</li><li>新增<code>net/http.ResponseContorller</code>，提供了一种更清晰、更易于发现的方法来添加每个 handler controls。</li><li><code>httputil.ReverseProxy</code>包含了一个新的 Rewrite Hook 函数，用于取代之前的 Director Hook。</li></ol><p><strong>其他</strong></p><ol><li>go1.20 是最后一个支持 win7，8，Server2008 和 Server2012 的版本，在未来版本中不再提供支持。</li><li>go1.20 是最后一个支持 macOS 10.13 或 10.14 的版本，未来版本将不再提供支持。</li><li>在 1.18 和 1.19 版本中，由于泛型的出现，相较于 1.17 编译速度出现了倒退，go1.20 编译速度将会提升 10%左右。</li><li>发布 PGO(Profile-guided optimization)的预览版本，这是一种计算机界的编译器优化技术，可以提高运行时性能。</li><li>在 go1.20，在没有 C toolchains 的系统上，go command 禁用 cgo。</li><li>支持收集程序代码覆盖率文件，见<a href="https://go.dev/testing/coverage/" target="_blank" rel="noopener noreferrer">Coverage profiling support for integration tests - The Go Programming Language</a></li><li>对 GC 进行了改进，提高了稳定性，减少内存开销，提升了整体 2%的 CPU 性能。</li></ol><h2 id="_1-19" tabindex="-1"><a class="header-anchor" href="#_1-19"><span>1.19</span></a></h2><p>首次发布：2022-08-02</p><p>最后更新：go1.19.13 (released 2023-09-06)</p><p>go1.19 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.19" target="_blank" rel="noopener noreferrer">Go 1.19 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.19" target="_blank" rel="noopener noreferrer">Go1.19 - Release Patch</a>了解。</p><p><strong>重要变化</strong></p><ol><li><p>内存模型向 c/c++看齐，类似于 TcMollcate</p></li><li><p><code>sync/atomic</code>包现在提供了更多的类型可供使用</p></li><li><p>支持使用<code>runtime/debug.SetMemoryLimit</code>函数对 go 内存进行软限制，在某些情况下可以提供内存利用效率</p></li><li><p>运行时现在会根据协程栈的平均使用情况来选择一个合适的大小为其初始化栈空间内存，这样可以避免频繁的栈扩容缩容</p></li></ol><h2 id="_1-18" tabindex="-1"><a class="header-anchor" href="#_1-18"><span>1.18</span></a></h2><p>首次发布：2022-03-15</p><p>最后更新：go1.18.10 (released 2023-01-10)</p><p>go1.18 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.18" target="_blank" rel="noopener noreferrer">Go 1.18 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.18" target="_blank" rel="noopener noreferrer">Go1.18 - Release Patch</a>了解。</p><p><strong>语言层面</strong></p><ol><li>重量级更新，支持泛型，类型集接口，参数类型约束</li></ol><p><strong>其它</strong></p><ol><li>优化了<code>append</code>函数的扩容行为</li><li>新增<code>debug/buildinfo</code>包，可以在运行时获取 go 程序的构建信息</li><li>gofmt 现在可以并发的格式化源文件</li></ol><h2 id="_1-17" tabindex="-1"><a class="header-anchor" href="#_1-17"><span>1.17</span></a></h2><p>首次发布：2021-08-16</p><p>最后更新：go1.17.13 (released 2022-08-01)</p><p>go1.17 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.17" target="_blank" rel="noopener noreferrer">Go 1.17 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.17" target="_blank" rel="noopener noreferrer">Go1.17 - Release Patch</a>了解。</p><p><strong>语言层面</strong></p><ol><li>新增<code>unsafe.Add</code>函数，支持指针运算</li><li>新增<code>unsafe.Slice</code>函数，支持获取切片的底层数组的指针</li><li>切片现在可以转换为数组指针类型，<code>[]T =&gt; *[N]T</code>，前提是数组的长度要小于等于切片的长度</li></ol><h2 id="_1-16" tabindex="-1"><a class="header-anchor" href="#_1-16"><span>1.16</span></a></h2><p>首次发布：2021-02-16</p><p>最后更新：go1.16.15 (released 2022-03-03)</p><p>go1.16 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.16" target="_blank" rel="noopener noreferrer">Go 1.16 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.16" target="_blank" rel="noopener noreferrer">Go1.16 - Release Patch</a>了解。</p><p><strong>重要变化</strong></p><p>该版本没什么重要的语法上的变更，一些重要的变化如下</p><ol><li>弃用<code>ioutil</code>包</li><li>支持通过<code>//go:embed</code>指令来将一些静态文件嵌入到程序中</li><li>新增<code>io/fs.Fs</code>类型，对文件系统进行了更好的抽象</li></ol><h2 id="_1-15" tabindex="-1"><a class="header-anchor" href="#_1-15"><span>1.15</span></a></h2><p>首次发布：2020-08-11</p><p>最后更新：go1.15.15 (released 2021-08-05)</p><p>go1.15 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.15" target="_blank" rel="noopener noreferrer">Go 1.15 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.15" target="_blank" rel="noopener noreferrer">Go1.15 - Release Patch</a>了解。</p><p><strong>重要变化</strong></p><p>该版本没什么重要的语法上的变更，一些重要的变化如下</p><ol><li><p>优化了小对象的分配效率</p></li><li><p>新增了包<code>time/tzdata</code>，通过下面的方式支持将时区数据库嵌入到程序中，因为有很多系统本地并没有时区数据信息。</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">improt</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> _</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;time/tzdata&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>对 go 链接器做出了重大改进，减少了其资源使用，并提高了代码的健壮性</p></li><li><p>在某些情况下，允许<code>unsafe.Pointer</code>转换为<code>uinptr</code></p></li></ol><h2 id="_1-14" tabindex="-1"><a class="header-anchor" href="#_1-14"><span>1.14</span></a></h2><p>首次发布：2020-02-25</p><p>最后更新：go1.14.15 (released 2021-02-04)</p><p>go1.14 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.14" target="_blank" rel="noopener noreferrer">Go 1.14 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.14" target="_blank" rel="noopener noreferrer">Go1.14 - Release Patch</a>了解。</p><p><strong>语言层面</strong></p><ol><li><p>支持方法集接口类型嵌套</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> MyIO</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> interface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  io</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">WriteCloser</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><strong>其它</strong></p><ol><li>引用了开放编码优化，<code>defer</code>调用的开销降低至几乎跟原生调用一样</li><li>支持协程间的异步抢占，没有函数调用的循环将不会再永久阻塞调度</li></ol><h2 id="_1-13" tabindex="-1"><a class="header-anchor" href="#_1-13"><span>1.13</span></a></h2><p>首次发布：2019-09-03</p><p>最后更新：go1.13.15 (released 2020-08-06)</p><p>go1.13 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.13" target="_blank" rel="noopener noreferrer">Go 1.13 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.13" target="_blank" rel="noopener noreferrer">Go1.13 - Release Patch</a>了解。</p><p><strong>语言层面</strong></p><ol><li><p>支持更现代的数字字面量，比如</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">0b</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">101</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 二进制</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">0o</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 十进制</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1B</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 十六进制</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>支持下划线分割数字以带来更好的可读性</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10_000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>虚数<code>i</code>的后缀现在可以是任何的二进制，十进制，十六进制，或浮点数数字</p></li></ol><p><strong>其它</strong></p><ol><li><code>GO111MODULE</code>值默认为<code>auto</code></li><li>新增<code>GOPRIVATE</code>环境变量来支持私有的依赖源</li><li>新增<code>GOSUMDB</code>环境环境</li><li><code>defer</code>的使用开销降低了 30%</li><li>当发生索引下标越界时，<code>panic</code>现在会打印出下标信息</li><li>go 下载依赖时会进行语义化版本验证</li></ol><h2 id="_1-12" tabindex="-1"><a class="header-anchor" href="#_1-12"><span>1.12</span></a></h2><p>首次发布：2019-02-25</p><p>最后更新：go1.12.17 (released 2020-02-12)</p><p>go1.12 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.12" target="_blank" rel="noopener noreferrer">Go 1.12 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.12" target="_blank" rel="noopener noreferrer">Go1.12 - Release Patch</a>了解。</p><p><strong>重要变化</strong></p><p>该版本没什么重要的语法上的变更，一些重要的变化如下</p><ol><li>显著提高了堆的扫描性能</li><li>运行时将更积极的向操作系统释放申请的内存</li><li>用于下载 go 依赖的命令现在可以并发安全的使用</li></ol><h2 id="_1-11" tabindex="-1"><a class="header-anchor" href="#_1-11"><span>1.11</span></a></h2><p>首次发布：2018-08-24</p><p>最后更新：go1.11.13 (released 2019-08-13)</p><p>go1.11 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.11" target="_blank" rel="noopener noreferrer">Go 1.11 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.11" target="_blank" rel="noopener noreferrer">Go1.11 - Release Patch</a>了解。</p><p><strong>重要变化</strong></p><p>该版本没什么重要的语法上的变更，一些重要的变化如下</p><ol><li>GoMod 首次发布，此前依赖管理的混乱局面将要结束</li><li>首次实验性的支持了 WASM</li><li>运行时采用稀疏堆布局，不再限制堆大小</li></ol><h2 id="_1-10" tabindex="-1"><a class="header-anchor" href="#_1-10"><span>1.10</span></a></h2><p>首次发布：2018-02-16</p><p>最后更新：go1.10.8 (released 2019-01-23)</p><p>go1.10 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.10" target="_blank" rel="noopener noreferrer">Go 1.10 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.10" target="_blank" rel="noopener noreferrer">Go1.10 - Release Patch</a>了解。</p><p><strong>重要变化</strong></p><p>该版本没什么重要的语法上的变更，一些重要的变化如下</p><ol><li><code>go install</code>命令现在只用于安装和编译命令行工具，不再用于下载依赖</li><li><code>go get</code>命令现在用于下载源码依赖</li><li>go 测试现在会缓存测试结果，并且会在运行前自动运行<code>go vet</code></li><li>显著降低了 GC 在活跃时造成的延时</li></ol><h2 id="_1-9" tabindex="-1"><a class="header-anchor" href="#_1-9"><span>1.9</span></a></h2><p>首次发布：2017-08-24</p><p>最后更新：go1.9.7 (released 2018-06-05)</p><p>go1.9 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.9" target="_blank" rel="noopener noreferrer">Go 1.9 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.9" target="_blank" rel="noopener noreferrer">Go1.9 - Release Patch</a>了解。</p><p><strong>语言层面</strong></p><ol><li>支持类型别名</li></ol><p><strong>其它</strong></p><ol><li>支持并行编译</li><li>新增并发安全的<code>sync.Map</code></li></ol><h2 id="_1-8" tabindex="-1"><a class="header-anchor" href="#_1-8"><span>1.8</span></a></h2><p>首次发布：2017-02-16</p><p>最后更新：go1.8.7 (released 2018-02-07)</p><p>go1.8 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.8" target="_blank" rel="noopener noreferrer">Go 1.8 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.8" target="_blank" rel="noopener noreferrer">Go1.8 - Release Patch</a>了解。</p><p><strong>语言层面</strong></p><ol><li><p>当两个结构体进行类型转换时，会忽略结构体 tag 的不同</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> example</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> T1</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        X</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`json:&quot;foo&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> T2</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        X</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`json:&quot;bar&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v1</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> T1</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v2</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> T2</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    v1</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> T1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">v2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// now legal</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><strong>其它</strong></p><ol><li>垃圾收集造成的暂停时间低至 10 微秒，大部分情况下低于 100 微秒（可以看到几乎每个版本 go 都在努力改进 GC）</li><li>调用<code>defer</code>的开销减少了接近一半</li><li>go 调用 c 的开销减少了接近一半</li><li>优化了 map 的并发使用检测</li></ol><h2 id="_1-7" tabindex="-1"><a class="header-anchor" href="#_1-7"><span>1.7</span></a></h2><p>首次发布：2016-08-15</p><p>最后更新：go1.7.6 (released 2017-05-23)</p><p>go1.7 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.7" target="_blank" rel="noopener noreferrer">Go 1.7 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.7" target="_blank" rel="noopener noreferrer">Go1.7 - Release Patch</a>了解。</p><p><strong>重要变化</strong></p><ol><li>将<code>golang.org/x/net/context</code>加入标准库</li><li>gc 时间相较于 1.6 大幅缩短</li><li><code>testing</code>包支持子测试</li></ol><h2 id="_1-6" tabindex="-1"><a class="header-anchor" href="#_1-6"><span>1.6</span></a></h2><p>首次发布：2016-02-17</p><p>最后更新：go1.6.4 (released 2016-12-01)</p><p>go1.6 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.6" target="_blank" rel="noopener noreferrer">Go 1.6 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.6" target="_blank" rel="noopener noreferrer">Go1.6 - Release Patch</a>了解。</p><p><strong>重要变化</strong></p><p>该版本没有语法上的变更，下面是比较重要的变化</p><ol><li>对 map 进行并发使用检测，如果检测到了 map 正在并发使用会抛出<code>fatal</code></li><li>在发生<code>panic</code>时，只会打印正在运行协程的调用栈</li><li>支持 HTTP/2</li></ol><h2 id="_1-5" tabindex="-1"><a class="header-anchor" href="#_1-5"><span>1.5</span></a></h2><p>首次发布：2015-08-19</p><p>最后更新：go1.5.4 (released 2016-04-12)</p><p>go1.5 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.5" target="_blank" rel="noopener noreferrer">Go 1.5 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.5" target="_blank" rel="noopener noreferrer">Go1.5 - Release Patch</a>了解。</p><p><strong>语言层面</strong></p><ol><li><p>在初始化 map 字面量的键时，允许省略元素类型</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">m</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Point</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    Point</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">29.935523</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">52.891566</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}:   </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Persepolis&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    Point</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">25.352594</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">131.034361</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Uluru&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    Point</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">37.422455</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">122.084306</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Googleplex&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 省略类型</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">m</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Point</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">29.935523</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">52.891566</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}:   </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Persepolis&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">25.352594</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">131.034361</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Uluru&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">37.422455</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">122.084306</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Googleplex&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><strong>其它</strong></p><ol><li>运行时和编译器完全由 go 重写，不再包含任何 c 代码</li><li>支持并发垃圾收集，大大减少了程序暂停的时间</li><li><code>GOMAXPROCS</code>默认值变为机器的逻辑核数</li><li><code>internal</code>包的语义可以应用到任何地方，不再只局限于 go 的源码包</li><li>实验性的支持 vendor 依赖管理（终于开始着手处理依赖管理这部分了）</li></ol><h2 id="_1-4" tabindex="-1"><a class="header-anchor" href="#_1-4"><span>1.4</span></a></h2><p>首次发布：2014-12-10</p><p>最后更新：go1.4.3 (released 2015-09-22)</p><p>go1.4 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.4" target="_blank" rel="noopener noreferrer">Go 1.4 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.4" target="_blank" rel="noopener noreferrer">Go1.4 - Release Patch</a>了解。</p><p><strong>语言层面</strong></p><ol><li><p><code>for range</code>循环可以一个迭代参数，比如</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>for i := range x {</span></span>
<span class="line"><span>    ...</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是不能一个都没有</p></li><li><p>在调用双重引用类型的方法时，不再自动解引用</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> T</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">M</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> **</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">T</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 不被允许</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">M</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><strong>其它</strong></p><ol><li>在 1.4 之前，go 的运行时都是由 c 编写的，现在全部由 go 完成</li><li>支持将包名修改为<code>internal</code>来表示该包的所有内容都是私有的不可导出</li></ol><h2 id="_1-3" tabindex="-1"><a class="header-anchor" href="#_1-3"><span>1.3</span></a></h2><p>首次发布：2014-06-18</p><p>最后更新：go1.3.3 (released 2014-09-30)</p><p>go1.3 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.3" target="_blank" rel="noopener noreferrer">Go 1.3 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.3" target="_blank" rel="noopener noreferrer">Go1.3 - Release Patch</a>了解。</p><p><strong>重要变化</strong></p><p>该版本没有语法上的变更，一些比较重要的变化如下</p><ol><li>协程栈模型从分段栈改为连续栈，提升了栈扩容的性能。</li><li>提升了垃圾回收器指针判断的精度</li><li>在小容量 map 中进行迭代，顺序也会变得不可预测</li><li>由于一些运行时方面的完善，当前版本的 go 程序性能有了较大幅度的提升</li></ol><h2 id="_1-2" tabindex="-1"><a class="header-anchor" href="#_1-2"><span>1.2</span></a></h2><p>首次发布：2013-12-01</p><p>最后更新：go1.2.2 (released 2014-05-05)</p><p>go1.2 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.2" target="_blank" rel="noopener noreferrer">Go 1.2 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.2" target="_blank" rel="noopener noreferrer">Go1.2 - Release Patch</a>了解。</p><p><strong>语言层面</strong></p><ol><li><p>对值为<code>nil</code>的变量进行操作会引发<code>panic</code></p></li><li><p>在对切片进行分隔时，可以使用第三个参数来限制被分割的切片容量从而更安全的使用切片</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> array</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">slice</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> array</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><strong>其它</strong></p><ol><li><p>协程栈的最小内存大小由 4KB 提升到了 8KB</p></li><li><p>将最大线程数限制在了 10000</p></li><li><p>长时间运行的协程在发生函数调用时会被抢占（协作式抢占的首次引入）</p></li></ol><h2 id="_1-1" tabindex="-1"><a class="header-anchor" href="#_1-1"><span>1.1</span></a></h2><p>首次发布：2013-05-13</p><p>最后更新：go1.1.2 (released 2013-08-13)</p><p>go1.1 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.1" target="_blank" rel="noopener noreferrer">Go 1.1 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.1" target="_blank" rel="noopener noreferrer">Go1.1 - Release Patch</a>了解。</p><p><strong>语言层面</strong></p><ol><li>一个数被 0 整除以前会抛出<code>panic</code>，到了 1.1 直接无法通过编译。</li><li>方法可以作为一个值存在。</li><li>引入了终止语句的概念，函数的返回规则更为宽松，<a href="https://go.dev/ref/spec#Terminating_statements" target="_blank" rel="noopener noreferrer">终止语句的定义 - go-sepc</a>。</li></ol><p><strong>性能方面</strong></p><ol><li>使用 go1.1 的工具编译的 go 程序性能大概可以提升 30%-40%</li></ol><p><strong>其它:</strong></p><ol><li>在 64 位机上堆内存的最大值提升到了几十 GB</li><li>交叉编译时默认禁用 cgo</li></ol><h2 id="_1-0" tabindex="-1"><a class="header-anchor" href="#_1-0"><span>1.0</span></a></h2><p>首次发布：2012-03-28</p><p>go1.0 版本的详细更新日志可以前往<a href="https://go.dev/doc/go1.0" target="_blank" rel="noopener noreferrer">Go 1.0 Release Notes</a>查看，在其维护期间发布的所有补丁版本可以前往<a href="https://go.dev/doc/devel/release#go1.0" target="_blank" rel="noopener noreferrer">Go1.0 - Release Patch</a>了解。</p><p><strong>语言层面</strong></p><p>相较于预览版而言，语法上多了以下这些东西</p><ol><li><p>新增内置<code>append</code>函数，用于给切片添加元素</p></li><li><p>新增内置<code>close</code>函数，用于关闭管道</p></li><li><p>复合语义，在初始化切片，map，结构体字面量元素时，可以省略其类型，如下所示</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 声明类型</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">holiday1</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> []</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    Date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Feb&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">14</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    Date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Nov&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    Date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Dec&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">25</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 省略类型</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">holiday2</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> []</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Feb&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">14</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Nov&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Dec&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">25</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在<code>init</code>函数中使用的协程会直接启动，不需要再等待所有的包都初始化完毕。</p></li><li><p>新增<code>rune</code>类型，表示一个 UTF-8 字符</p></li><li><p>新增<code>error</code>内置接口，表示错误类型</p></li><li><p>新增<code>delete</code>内置函数用于删除 map 中的键值对</p></li><li><p>使用<code>for range</code>迭代 map 的顺序变得不可预测</p></li><li><p>支持同时给多个变量赋值</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>a := 1</span></span>
<span class="line"><span>b := 2</span></span>
<span class="line"><span>a, b = 3, 4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>变量隐藏问题：当函数的有具名返回值时，如果有任何返回值被隐藏了，则<code>return</code>语句必须携带返回值，否则编译不通过，下面是一个错误示例</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Bug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">j</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">k</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> j</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">j</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">j</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Redeclares j.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            k</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> +=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> j</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> k</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                return</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // Rejected: j is shadowed here.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // OK: j is not shadowed here.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>允许复制带有私有字段的结构体值</p></li><li><p>在结构体和切片都是可比较元素组成的情况下，允许它们作为 map 的键，同时移除了函数和 map 的可比较性</p></li></ol><p>除了语言层面之外，go1.0 在包的组织方式和标准库以及命令行方面相较于预览版本都有着非常大的改变，由于内容太多这里不再过多赘述，感兴趣可以自己去官网了解。</p><h2 id="pre" tabindex="-1"><a class="header-anchor" href="#pre"><span>pre</span></a></h2><p>在 go1 正式发布之前，所有的版本都被称为预览版本，对于这些预览版本官方会每周发布一个快照版本，其中比较重要的版本有</p><ul><li>r60(2011-09-07)，规定了 else 块现在必须加括号</li><li>r59(2011-08-01)，设计了新的结构体 tag 方案</li><li>r58(2011-06-29)，修复了滥用 goto 而导致内存未初始化的问题，新增了 gui，exec 包</li><li>r57(2011-05-03)，支持短变量多重赋值语法，重新设计了 http，reflect 包，将 gotest 作为一个 go 程序而非 shell 脚本</li><li>r56(2011-03-07)，第一个稳定版本</li></ul><p>预览版本的开发始于 2009 年 12 月 09 日，在 go1 于 2012 年 3 月 28 日正式发布之后停止，持续了接近三年的时间，往后不再记录每周快照版本。前往<a href="https://go.dev/doc/devel/pre_go1" target="_blank" rel="noopener noreferrer">Pre-Go 1 Release History</a>了解这些主要版本的信息，前往<a href="https://go.dev/doc/devel/weekly#2012-03-27" target="_blank" rel="noopener noreferrer">Weekly Snapshot History</a>了解全部预览版本的每周快照版本信息。</p>`,218)]))}const k=s(n,[["render",t],["__file","release.html.vue"]]),d=JSON.parse('{"path":"/release.html","title":"更新日志","lang":"zh-CN","frontmatter":{"description":"更新日志 维护版本： go1.24，首次发布：2025-02-11，最后更新：go1.24.0 (2025-02-11) go1.23，首次发布：2024-08-13，最后更新：go1.23.4 (2024-12-03) Go 语言官方更新日志：Release History - The Go Programming Language Go 官方采用语...","head":[["meta",{"property":"og:url","content":"https://golang.halfiisland.com/release.html"}],["meta",{"property":"og:site_name","content":"Golang 中文学习文档"}],["meta",{"property":"og:title","content":"更新日志"}],["meta",{"property":"og:description","content":"更新日志 维护版本： go1.24，首次发布：2025-02-11，最后更新：go1.24.0 (2025-02-11) go1.23，首次发布：2024-08-13，最后更新：go1.23.4 (2024-12-03) Go 语言官方更新日志：Release History - The Go Programming Language Go 官方采用语..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-04T13:16:58.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-04T13:16:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"更新日志\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-04T13:16:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"寒江蓑笠翁\\",\\"url\\":\\"https://246859.github.io/\\",\\"email\\":\\"2633565580@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"1.24","slug":"_1-24","link":"#_1-24","children":[]},{"level":2,"title":"1.23","slug":"_1-23","link":"#_1-23","children":[]},{"level":2,"title":"1.22","slug":"_1-22","link":"#_1-22","children":[]},{"level":2,"title":"1.21","slug":"_1-21","link":"#_1-21","children":[]},{"level":2,"title":"1.20","slug":"_1-20","link":"#_1-20","children":[]},{"level":2,"title":"1.19","slug":"_1-19","link":"#_1-19","children":[]},{"level":2,"title":"1.18","slug":"_1-18","link":"#_1-18","children":[]},{"level":2,"title":"1.17","slug":"_1-17","link":"#_1-17","children":[]},{"level":2,"title":"1.16","slug":"_1-16","link":"#_1-16","children":[]},{"level":2,"title":"1.15","slug":"_1-15","link":"#_1-15","children":[]},{"level":2,"title":"1.14","slug":"_1-14","link":"#_1-14","children":[]},{"level":2,"title":"1.13","slug":"_1-13","link":"#_1-13","children":[]},{"level":2,"title":"1.12","slug":"_1-12","link":"#_1-12","children":[]},{"level":2,"title":"1.11","slug":"_1-11","link":"#_1-11","children":[]},{"level":2,"title":"1.10","slug":"_1-10","link":"#_1-10","children":[]},{"level":2,"title":"1.9","slug":"_1-9","link":"#_1-9","children":[]},{"level":2,"title":"1.8","slug":"_1-8","link":"#_1-8","children":[]},{"level":2,"title":"1.7","slug":"_1-7","link":"#_1-7","children":[]},{"level":2,"title":"1.6","slug":"_1-6","link":"#_1-6","children":[]},{"level":2,"title":"1.5","slug":"_1-5","link":"#_1-5","children":[]},{"level":2,"title":"1.4","slug":"_1-4","link":"#_1-4","children":[]},{"level":2,"title":"1.3","slug":"_1-3","link":"#_1-3","children":[]},{"level":2,"title":"1.2","slug":"_1-2","link":"#_1-2","children":[]},{"level":2,"title":"1.1","slug":"_1-1","link":"#_1-1","children":[]},{"level":2,"title":"1.0","slug":"_1-0","link":"#_1-0","children":[]},{"level":2,"title":"pre","slug":"pre","link":"#pre","children":[]}],"git":{"createdTime":1692543159000,"updatedTime":1741094218000,"contributors":[{"name":"246859","username":"246859","email":"yihaow@dstgo.cn","commits":1,"url":"https://github.com/246859"},{"name":"WaterFishFish","username":"WaterFishFish","email":"91576147+WaterFishFish@users.noreply.github.com","commits":1,"url":"https://github.com/WaterFishFish"},{"name":"waterfishfish","username":"waterfishfish","email":"14873150+waterfishfish@user.noreply.gitee.com","commits":1,"url":"https://github.com/waterfishfish"},{"name":"Mister-Hope","username":"Mister-Hope","email":"mister-hope@outlook.com","commits":1,"url":"https://github.com/Mister-Hope"},{"name":"246859","username":"246859","email":"2633565580@qq.com","commits":16,"url":"https://github.com/246859"},{"name":"yihhao wang","username":"yihhao wang","email":"2633565580@qq.com","commits":5,"url":"https://github.com/yihhao wang"}]},"readingTime":{"minutes":46.43,"words":6965},"filePathRelative":"release.md","localizedDate":"2023年8月20日","autoDesc":true,"excerpt":"\\n<p><strong>维护版本：</strong></p>\\n<ul>\\n<li>go1.24，首次发布：2025-02-11，最后更新：go1.24.0 (2025-02-11)</li>\\n<li>go1.23，首次发布：2024-08-13，最后更新：go1.23.4 (2024-12-03)</li>\\n</ul>\\n<p>Go 语言官方更新日志：<a href=\\"https://go.dev/doc/devel/release\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Release History - The Go Programming Language</a></p>"}');export{k as comp,d as data};
