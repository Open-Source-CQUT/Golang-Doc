import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as k,d as a,a as l,b as i,e,f as h,r as p,o as d}from"./app-Xwf9uOZo.js";const r="/images/essential/md_1.png",g="/images/essential/md_2.png",c="/images/essential/md_3.png",o="/images/essential/md_4.png",A="/images/essential/md_5.png",F="/images/essential/md_6.png",y="/images/essential/md_7.png",v="/images/essential/md_8.svg",m={};function u(b,s){const n=p("RouteLink");return d(),k("div",null,[s[6]||(s[6]=a('<h1 id="模块" tabindex="-1"><a class="header-anchor" href="#模块"><span>模块</span></a></h1><p>每一个现代语言都会有属于自己的一个成熟的依赖管理工具，例如 Java 的 Gradle，Python 的 Pip，NodeJs 的 Npm 等，一个好的依赖管理工具可以为开发者省去不少时间并且可以提升开发效率。然而 Go 在早期并没有一个成熟的依赖管理解决方案，那时所有的代码都存放在 GOPATH 目录下，对于工程项目而言十分的不友好，版本混乱，依赖难以管理，为了解决这个问题，各大社区开发者百家争鸣，局面一时间混乱了起来，期间也不乏出现了一些佼佼者例如 Vendor，直到 Go1.11 官方终于推出了 Go Mod 这款官方的依赖管理工具，结束了先前的混乱局面，并在后续的更新中不断完善，淘汰掉了曾经老旧的工具。时至今日，在撰写本文时，Go 发行版本已经到了 1.20，在今天几乎所有的 Go 项目都在采用 Go Mod，所以在本文也只会介绍 Go Mod，官方对于 Go 模块也编写了非常细致的文档：<a href="https://go.dev/ref/mod" target="_blank" rel="noopener noreferrer">Go Modules Reference</a>。</p><h2 id="编写模块" tabindex="-1"><a class="header-anchor" href="#编写模块"><span>编写模块</span></a></h2><p>Go Module 本质上是基于 VCS（版本控制系统），当你在下载依赖时，实际上执行的是 VCS 命令，比如<code>git</code>，所以如果你想要分享你编写的库，只需要做到以下三点：</p><ul><li>源代码仓库可公开访问，且 VCS 属于以下的其中之一 <ul><li>git</li><li>hg (Mercurial)</li><li>bzr (Bazaar)</li><li>svn</li><li>fossil</li></ul></li><li>是一个符合规范的 go mod 项目</li><li>符合语义化版本规范</li></ul><p>所以你只需要正常使用 VCS 开发，并为你的特定版本打上符合标准的 Tag，其它人就可以通过模块名来下载你所编写的库，下面将通过示例来演示进行模块开发的几个步骤。</p><p>示例仓库：<a href="https://github.com/246859/hello" target="_blank" rel="noopener noreferrer">246859/hello: say hello (github.com)</a></p><h3 id="准备" tabindex="-1"><a class="header-anchor" href="#准备"><span>准备</span></a></h3><p>在开始之前确保你的版本足以完全支持 go mod（go &gt;= 1.17），并且启用了 Go Module，通过如下命令来查看是否开启</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GO111MODULE</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果未开启，通过如下命令开启用 Go Module</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -w</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GO111MODULE=on</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="创建" tabindex="-1"><a class="header-anchor" href="#创建"><span>创建</span></a></h3><p>首先你需要一个可公网访问的源代码仓库，这个有很多选择，我比较推荐 Github。在上面创建一个新项目，将其取名为 hello，仓库名虽然没有什么特别限制，但建议还是不要使用特殊字符，因为这会影响到模块名。</p><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202404071341749.png" style="zoom:67%;"><p>创建完成后，可以看到仓库的 URL 是<code>https://github.com/246859/hello</code>，对应的 go 模块名就是<code>github.com/246859/hello</code>。</p><figure><img src="'+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后将其克隆到本地，通过<code>go mod init</code>命令初始化模块。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git@github.com:246859/hello.git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Cloning</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> into</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;hello&#39;...</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">remote:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Enumerating</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> objects:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 5,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> done.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">remote:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Counting</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> objects:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 100%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (5/5), done.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">remote:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Compressing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> objects:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 100%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (4/4), done.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">remote:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Total</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (delta </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), reused 0 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">delta</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), pack-reused 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Receiving</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> objects:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 100%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (5/5), done.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/246859/hello</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> creating</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> new</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go.mod:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> module</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/246859/hello</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编写" tabindex="-1"><a class="header-anchor" href="#编写"><span>编写</span></a></h3><p>然后就可以进行开发工作了，它的功能非常简单，只有一个函数</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// hello.go</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> hello</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;fmt&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Hello returns hello message</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">                name</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;world&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Sprintf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>顺便写一个测试文件进行单元测试</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// hello_test.go</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> hello_test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;testing&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;fmt&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;github.com/246859/hello&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> TestHello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">t</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">testing</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        data</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;jack&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        expected</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Sprintf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        result</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> !=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> expected</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">                t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Fatalf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;expected result </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">, but got </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">expected</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来继续编写一个命令行程序用于输出 hello，它的功能同样非常简单。对于命令行程序而言，按照规范是在项目<code>cmd/app_name/</code>中进行创建，所以 hello 命令行程序的文件存放在<code>cmd/hello/</code>目录下，然后在其中编写相关代码。</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// cmd/hello/main.go</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;flag&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;github.com/246859/hello&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;os&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> string</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  flag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">StringVar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;world&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name to say hello&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  flag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Parse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  msg</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  _</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> os</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Stdout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WriteString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">msg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> err</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    os</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Stderr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WriteString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h3><p>编写完后对源代码格式化并测试</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">===</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> RUN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   TestHello</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">---</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PASS:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TestHello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (0.00s)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PASS</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ok</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      github.com/246859/hello</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.023s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行命令行程序</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./cmd/hello</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jack</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hello</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jack!</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文档" tabindex="-1"><a class="header-anchor" href="#文档"><span>文档</span></a></h3><p>最后的最后，需要为这个库编写简洁明了的<code>README</code>，让其它开发者看一眼就知道怎么使用</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># hello</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">just say hello</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## Install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">import code</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\`\`\`bash</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/246859/hello@latest</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">install cmd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\`\`\`bash</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/246859/hello/cmd/hello@latest</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## Example</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Here&#39;s a simple example as follows:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\`\`\`go</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;fmt&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;github.com/246859/hello&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  result</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;jack&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\`\`\`</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是一个很简单的 README 文档，你也可以自己进行丰富。</p><h3 id="上传" tabindex="-1"><a class="header-anchor" href="#上传"><span>上传</span></a></h3><p>当一切代码都编写并测试完毕过后，就可以将修改提交并推送到远程仓库。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go.mod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hello.go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hello_test.go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmd/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> example/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> README.md</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;chore(mod): mod init&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go.mod</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[main 5087fa2] chore(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">): mod init</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> changed,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> insertions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mode</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100644</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go.mod</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;feat(hello): complete Hello func&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hello.go</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[main 099a8bf] feat(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">): complete Hello func</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> changed,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 11</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> insertions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mode</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100644</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hello.go</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;test(hello): complete hello testcase&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hello_test.go</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[main 76e8c1e] test(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">): complete hello testcase</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> changed,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 17</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> insertions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mode</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100644</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hello_test.go</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;feat(hello): complete hello cmd&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmd/hello/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[main a62a605] feat(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">): complete hello cmd</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> changed,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 22</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> insertions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mode</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100644</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmd/hello/main.go</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;docs(example): add hello example&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> example/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[main 5c51ce4] docs(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">example</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">): add hello example</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> changed,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 11</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> insertions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mode</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100644</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> example/main.go</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;docs(README): update README&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> README.md</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[main e6fbc62] docs(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">README</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">): update README</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> changed,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 27</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> insertions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deletion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>总共六个提交并不多，提交完毕后为最新提交创建一个 tag</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.0.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tag</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -l</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">v1.0.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> log</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --oneline</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">e6fbc62</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (HEAD -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">main,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tag:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.0.0,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin/main,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin/HEAD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) docs(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">README</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">): update README</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">5c51ce4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">example</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hello</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> example</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">a62a605</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> complete</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hello</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmd</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">76e8c1e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> complete</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hello</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> testcase</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">099a8bf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> complete</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Hello</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> func</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">5087fa2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> chore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1f422d1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Initial</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后再推送到远程仓库</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --tags</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Enumerating</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> objects:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 23,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> done.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Counting</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> objects:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 100%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (23/23), done.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Delta</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> compression</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 16</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> threads</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Compressing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> objects:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 100%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (17/17), done.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Writing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> objects:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 100%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (21/21), 2.43 KiB | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1.22</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MiB/s,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> done.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Total</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 21</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (delta </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), reused 0 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">delta</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), pack-reused 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">remote:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Resolving</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deltas:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 100%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (5/5), done.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">To</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com:246859/hello.git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1f422d1..e6fbc62</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">main</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [new </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">tag]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         v1.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">v1.0.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>推送完毕后，再为其创建一个 release（有一个 tag 就足矣，release 只是符合 github 规范）</p><figure><img src="`+g+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如此一来，模块的编写就完成了，以上就是模块开发的一个基本流程，其它开发者便可以通过模块名来引入代码或安装命令行工具。</p><h3 id="引用" tabindex="-1"><a class="header-anchor" href="#引用"><span>引用</span></a></h3><p>通过<code>go get</code>引用库</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/246859/hello@latest</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/246859/hello</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.0.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/246859/hello</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.0.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过<code>go intall</code>安装命令行程序</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/246859/hello/cmd/hello@latest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hello</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jack</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hello</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jack!</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>或者使用<code>go run</code>直接运行</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -mod=mod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/246859/hello/cmd/hello</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jack</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hello</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jack!</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>当一个库被引用过后，<a href="https://pkg.go.dev/" target="_blank" rel="noopener noreferrer">Go Package</a>便会为其创建一个页面，这个过程是自动完成的，不需要开发者做什么工作，比如 hello 库就有一个专属的文档页面，如下图所示。</p><figure><img src="`+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>关于上传模块的更多详细信息，前往<a href="https://pkg.go.dev/about#adding-a-package" target="_blank" rel="noopener noreferrer">Add a package</a>。</p><p>关于如何删除模块的信息，前往<a href="https://pkg.go.dev/about#removing-a-package" target="_blank" rel="noopener noreferrer">Removing a package</a>。</p><h2 id="设置代理" tabindex="-1"><a class="header-anchor" href="#设置代理"><span>设置代理</span></a></h2><p>Go 虽然没有像 Maven Repo，PyPi，NPM 这样类似的中央仓库，但是有一个官方的代理仓库：<a href="https://proxy.golang.org/" target="_blank" rel="noopener noreferrer">Go modules services (golang.org)</a>，它会根据版本及模块名缓存开发者下载过的模块。不过由于其服务器部署在国外，访问速度对于国内的用户不甚友好，所以我们需要修改默认的模块代理地址，目前国内做的比较好的有以下几家：</p><ul><li><a href="https://goproxy.io/zh/" target="_blank" rel="noopener noreferrer">GOPROXY.IO - 一个全球代理 为 Go 模块而生</a></li><li><a href="https://goproxy.cn/" target="_blank" rel="noopener noreferrer">七牛云 - Goproxy.cn</a></li></ul><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里选择七牛云的代理，执行如下命令来修改 Go 代理，其中的<code>direct</code>表示代理下载失败后绕过代理缓存直接访问源代码仓库。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -w</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GOPROXY=https://goproxy.cn,direct</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>代理修改成功后，日后下载依赖就会非常的迅速。</p><h2 id="下载依赖" tabindex="-1"><a class="header-anchor" href="#下载依赖"><span>下载依赖</span></a></h2><p>修改完代理后，接下来安装一个第三方依赖试试，Go 官方有专门的依赖查询网站：<a href="https://pkg.go.dev/" target="_blank" rel="noopener noreferrer">Go Packages</a>。</p><h3 id="代码引用" tabindex="-1"><a class="header-anchor" href="#代码引用"><span>代码引用</span></a></h3><p>在里面搜索著名的 Web 框架<code>Gin</code>。</p><figure><img src="'+A+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里会出现很多搜索结果，在使用第三方依赖时，需要结合引用次数和更新时间来决定是否采用该依赖，这里直接选择第一个</p><figure><img src="'+F+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>进入对应的页面后，可以看出这是该依赖的一个文档页面，有着非常多关于它的详细信息，后续查阅文档时也可以来这里。</p><figure><img src="'+y+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里只需要将它的地址复制下来，然后在之前创建的项目下使用<code>go get</code>命令，命令如下</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/gin-gonic/gin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>过程中会下载很多的依赖，只要没有报错就说明下载成功。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/gin-gonic/gin</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/bytedance/sonic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.8.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/chenzhuoyu/base64x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0-20221115062448-fe3a3abad311</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/gin-contrib/sse</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.1.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/gin-gonic/gin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.9.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/go-playground/locales</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.14.1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/go-playground/universal-translator</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.18.1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/go-playground/validator/v10</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v10.11.2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/goccy/go-json</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.10.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/json-iterator/go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.1.12</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/klauspost/cpuid/v2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v2.0.9</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/leodido/go-urn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.2.1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/mattn/go-isatty</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.17</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/modern-go/concurrent</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0-20180228061459-e0a39a4cb421</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/modern-go/reflect2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.0.2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/pelletier/go-toml/v2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v2.0.6</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/twitchyliquid64/golang-asm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.15.1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/ugorji/go/codec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.2.9</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> golang.org/x/arch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0-20210923205945-b76863e36670</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> golang.org/x/crypto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.5.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> golang.org/x/net</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.7.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> golang.org/x/sys</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.5.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> golang.org/x/text</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.7.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> google.golang.org/protobuf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.28.1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gopkg.in/yaml.v3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v3.0.1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完成后查看<code>go.mod</code>文件</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go.mod</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">module</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> golearn</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1.20</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">require</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/gin-gonic/gin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.9.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  github.com/bytedance/sonic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.8.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  github.com/chenzhuoyu/base64x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0-20221115062448-fe3a3abad311</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  github.com/gin-contrib/sse</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.1.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  github.com/go-playground/locales</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.14.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  github.com/go-playground/universal-translator</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.18.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  github.com/go-playground/validator/v10</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v10.11.2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  github.com/goccy/go-json</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.10.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  github.com/json-iterator/go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.1.12</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  github.com/klauspost/cpuid/v2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v2.0.9</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  github.com/leodido/go-urn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.2.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  github.com/mattn/go-isatty</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.17</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  github.com/modern-go/concurrent</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0-20180228061459-e0a39a4cb421</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  github.com/modern-go/reflect2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.0.2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  github.com/pelletier/go-toml/v2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v2.0.6</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  github.com/twitchyliquid64/golang-asm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.15.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  github.com/ugorji/go/codec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.2.9</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  golang.org/x/arch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0-20210923205945-b76863e36670</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  golang.org/x/crypto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.5.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  golang.org/x/net</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.7.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  golang.org/x/sys</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.5.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  golang.org/x/text</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.7.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  google.golang.org/protobuf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.28.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  gopkg.in/yaml.v3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v3.0.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirect</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以发现相较于之前多了很多东西，同时也会发现目录下多了一个名为<code>go.sum</code>的文件</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go.mod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  go.sum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  main.go</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这里先按下不表，修改<code>main.go</code>文件如下代码：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;github.com/gin-gonic/gin&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  gin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再次运行项目</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> golearn</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[GIN-debug] [WARNING] Running in </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;debug&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> mode. Switch to </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;release&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> mode in production.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   export</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GIN_MODE=release</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> code:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gin.SetMode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">gin.ReleaseMode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Please</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> check</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> details.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[GIN-debug] Environment variable PORT is undefined. Using port :8080 by default</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[GIN-debug] Listening and serving HTTP on :8080</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>于是，通过一行代码就运行起了一个最简单的 Web 服务器。当不再需要某一个依赖时，也可以使用<code>go get</code>命令来删除该依赖，这里以删除 Gin 为例子</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/gin-gonic/gin@none</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> removed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/gin-gonic/gin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.9.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在依赖地址后面加上<code>@none</code>即可删除该依赖，结果也提示了删除成功，此时再次查看<code>go.mod</code>文件会发现没有了 Gin 依赖。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go.mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/gin-gonic/gin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当需要升级最新版本时，可以加上<code>@latest</code>后缀，或者可以自行查询可用的 Release 版本号</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/gin-gonic/gin@latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="安装命令行" tabindex="-1"><a class="header-anchor" href="#安装命令行"><span>安装命令行</span></a></h3><p><code>go install</code>命令会将第三方依赖下载到本地并编译成二进制文件，得益于 go 的编译速度，这一过程通常不会花费太多时间，然后 go 会将其存放在<code>$GOPATH/bin</code>或者<code>$GOBIN</code>目录下，以便在全局可以执行该二进制文件（前提是你将这些路径添加到了环境变量中）。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在使用<code>install</code>命令时，必须指定版本号。</p></div><p>例如下载由 go 语言编写的调试器<code>delve</code></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/go-delve/delve/cmd/dlv@latest</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/go-delve/delve</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.22.1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/cosiner/argv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.1.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/derekparker/trie</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0-20230829180723-39f4de51ef7d</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/go-delve/liner</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.2.3-0.20231231155935-4726ab1d7f62</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/google/go-dap</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.11.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/hashicorp/golang-lru</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.0.2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> golang.org/x/arch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.6.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/cpuguy83/go-md2man/v2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v2.0.2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go.starlark.net</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0-20231101134539-556fd59b42f6</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/cilium/ebpf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.11.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/mattn/go-runewidth</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.13</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/russross/blackfriday/v2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v2.1.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/rivo/uniseg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.2.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> golang.org/x/exp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0-20230224173230-c95f2b4c22f2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dlv</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Error:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unknown</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shorthand</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> flag:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;v&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Usage:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  dlv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [command]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Available</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Commands:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  attach</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      Attach</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> running</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> process</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> begin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> debugging.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  completion</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Generate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> autocompletion</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> script</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> specified</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  connect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     Connect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> headless</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> debug</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> with</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> terminal</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> client.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  core</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        Examine</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> core</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dump.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  dap</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         Starts</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> headless</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TCP</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> communicating</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> via</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Debug</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Adaptor</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Protocol</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (DAP).</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  debug</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       Compile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> begin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> debugging</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> package</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> current</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> directory,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> or</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> package</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> specified.</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        Execute</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> precompiled</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> binary,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> begin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> debug</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> session.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  help</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        Help</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> about</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> any</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> command</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  test</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        Compile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> binary</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> begin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> debugging</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> program.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  trace</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       Compile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> begin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tracing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> program.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  version</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     Prints</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> version.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Additional</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> help</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> topics:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  dlv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> backend</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    Help</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> about</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --backend</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> flag.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  dlv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> log</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        Help</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> about</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logging</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> flags.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  dlv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> redirect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   Help</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> about</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> redirection.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;dlv [command] --help&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> more</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> information</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> about</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> command.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="模块管理" tabindex="-1"><a class="header-anchor" href="#模块管理"><span>模块管理</span></a></h2><p>上述所有的内容都只是在讲述 Go Mod 的基本使用，但事实上要学会 Go Mod 仅仅只有这些是完全不够的。官方对于模块的定义为：一组被版本标记的包集合。上述定义中，包应该是再熟悉不过的概念了，而版本则是要遵循语义化版本号，定义为：<code>v(major).(minor).(patch)</code>的格式，例如 Go 的版本号<code>v1.20.1</code>，主版本号是 1，小版本号是 20，补丁版本是 1，合起来就是<code>v1.20.1</code>，下面是详细些的解释：</p><ul><li><code>major</code>：当 major 版本变化时，说明项目发生了不兼容的改动，老版本的项目升级到新版本大概率没法正常运行。</li><li><code>minor</code>：当<code>minor</code>版本变化时，说明项目增加了新的特性，只是先前版本的基础只是增加了新的功能。</li><li><code>patch</code>：当<code>patch</code>版本发生变化时，说明只是有 bug 被修复了，没有增加任何新功能。</li></ul><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h3><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>go mod download</code></td><td>下载当前项目的依赖包</td></tr><tr><td><code>go mod edit</code></td><td>编辑 go.mod 文件</td></tr><tr><td><code>go mod graph</code></td><td>输出模块依赖图</td></tr><tr><td><code>go mod init</code></td><td>在当前目录初始化 go mod</td></tr><tr><td><code>go mod tidy</code></td><td>清理项目模块</td></tr><tr><td><code>go mod verify</code></td><td>验证项目的依赖合法性</td></tr><tr><td><code>go mod why</code></td><td>解释项目哪些地方用到了依赖</td></tr><tr><td><code>go clean -modcache</code></td><td>用于删除项目模块依赖缓存</td></tr><tr><td><code>go list -m</code></td><td>列出模块</td></tr></tbody></table>`,100)),l("p",null,[s[1]||(s[1]=i("前往")),e(n,{to:"/cmd.html#mod"},{default:h(()=>s[0]||(s[0]=[i("go mod cmd")])),_:1}),s[2]||(s[2]=i("了解命令的更多有关信息"))]),s[7]||(s[7]=a(`<h3 id="模块存储" tabindex="-1"><a class="header-anchor" href="#模块存储"><span>模块存储</span></a></h3><p>当使用 Go Mod 进行项目管理时，模块缓存默认存放在<code>$GOPATH/pkg/mod</code>目录下，也可以修改<code>$GOMODCACHE</code>来指定存放在另外一个位置。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -w</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GOMODCACHE=你的模块缓存路径</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>同一个机器上的所有 Go Module 项目共享该目录下的缓存，缓存没有大小限制且不会自动删除，在缓存中解压的依赖源文件都是只读的，想要清空缓存可以执行如下命令。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clean</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -modcache</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在<code>$GOMODCACHE/cache/download</code>目录下存放着依赖的原始文件，包括哈希文件，原始压缩包等，如下例：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GOMODCACHE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/cache/download/github.com/246859/hello/@v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">list</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">v1.0.0.info</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">v1.0.0.lock</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">v1.0.0.mod</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">v1.0.0.zip</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">v1.0.0.ziphash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解压过后的依赖组织形式如下所示，就是指定模块的源代码。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GOMODCACHE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/github.com/246859/hello@v1.0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">LICENSE</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">README.md</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmd/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">example/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go.mod</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hello.go</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hello_test.go</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="版本选择" tabindex="-1"><a class="header-anchor" href="#版本选择"><span>版本选择</span></a></h3><p>Go 在依赖版本选择时，遵循<strong>最小版本选择原则</strong>。下面是一个官网给的例子，主模块引用了模块 A 的 1.2 版本和模块 B 的 1.2 版本，同时模块 A 的 1.2 版本引用了模块 C 的 1.3 版本，模块 B 的 1.2 版本引用了模块 C 的 1.4 版本，并且模块 C 的 1.3 和 1.4 版本都同时引用了模块 D 的 1.2 版本，根据最小可用版本原则，Go 最终会选择的版本是 A1.2，B1.2，C1.4 和 D1.2。其中淡蓝色的表示<code>go.mod</code>文件加载的，框选的表示最终选择的版本。</p><figure><img src="`+v+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>官网中还给出了<a href="https://go.dev/ref/mod#minimal-version-selection" target="_blank" rel="noopener noreferrer">其他几个例子</a>，大体意思都差不多。</p><h3 id="go-mod" tabindex="-1"><a class="header-anchor" href="#go-mod"><span>go.mod</span></a></h3><p>每创建一个 Go Mod 项目都会生成一个<code>go.mod</code>文件，因此熟悉<code>go.mod</code>文件是非常有必要的，不过大部分情况并不需要手动的修改<code>go.mod</code>文件。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>module golearn</span></span>
<span class="line"><span></span></span>
<span class="line"><span>go 1.20</span></span>
<span class="line"><span></span></span>
<span class="line"><span>require github.com/gin-gonic/gin v1.9.0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>require (</span></span>
<span class="line"><span>   github.com/bytedance/sonic v1.8.0 // indirect</span></span>
<span class="line"><span>   github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 // indirect</span></span>
<span class="line"><span>   github.com/gin-contrib/sse v0.1.0 // indirect</span></span>
<span class="line"><span>   github.com/go-playground/locales v0.14.1 // indirect</span></span>
<span class="line"><span>   github.com/go-playground/universal-translator v0.18.1 // indirect</span></span>
<span class="line"><span>   github.com/go-playground/validator/v10 v10.11.2 // indirect</span></span>
<span class="line"><span>   github.com/goccy/go-json v0.10.0 // indirect</span></span>
<span class="line"><span>   github.com/json-iterator/go v1.1.12 // indirect</span></span>
<span class="line"><span>   github.com/klauspost/cpuid/v2 v2.0.9 // indirect</span></span>
<span class="line"><span>   github.com/leodido/go-urn v1.2.1 // indirect</span></span>
<span class="line"><span>   github.com/mattn/go-isatty v0.0.17 // indirect</span></span>
<span class="line"><span>   github.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421 // indirect</span></span>
<span class="line"><span>   github.com/modern-go/reflect2 v1.0.2 // indirect</span></span>
<span class="line"><span>   github.com/pelletier/go-toml/v2 v2.0.6 // indirect</span></span>
<span class="line"><span>   github.com/twitchyliquid64/golang-asm v0.15.1 // indirect</span></span>
<span class="line"><span>   github.com/ugorji/go/codec v1.2.9 // indirect</span></span>
<span class="line"><span>   golang.org/x/arch v0.0.0-20210923205945-b76863e36670 // indirect</span></span>
<span class="line"><span>   golang.org/x/crypto v0.5.0 // indirect</span></span>
<span class="line"><span>   golang.org/x/net v0.7.0 // indirect</span></span>
<span class="line"><span>   golang.org/x/sys v0.5.0 // indirect</span></span>
<span class="line"><span>   golang.org/x/text v0.7.0 // indirect</span></span>
<span class="line"><span>   google.golang.org/protobuf v1.28.1 // indirect</span></span>
<span class="line"><span>   gopkg.in/yaml.v3 v3.0.1 // indirect</span></span>
<span class="line"><span>)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在文件中可以发现绝大多数的依赖地址都带有<code>github</code>等字眼，这是因为 Go 并没有一个公共的依赖仓库，大部分开源项目都是在托管在 Gitub 上的，也有部分的是自行搭建仓库，例如<code>google.golang.org/protobuf</code>，<code>golang.org/x/crypto</code>。通常情况下，这一串网址同时也是 Go 项目的模块名称，这就会出现一个问题，URL 是不分大小写的，但是存储依赖的文件夹是分大小写的，所以<code>go get github.com/gin-gonic/gin</code>和<code>go get github.com/gin-gonic/Gin</code>两个引用的是同一个依赖但是本地存放的路径不同。发生这种情况时，Go 并不会直接把大写字母当作存放路径，而是会将其转义为<code>!小写字母</code>，比如<code>github.com\\BurntSushi</code>最终会转义为<code>github.com\\!burnt!sushi</code>。</p><p><strong>module</strong></p><p><code>module</code>关键字声明了当前项目的模块名，一个<code>go.mod</code>文件中只能出现一个<code>module</code>关键字。例子中的</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>module golearn</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>代表着当前模块名为<code>golearn</code>，例如打开 Gin 依赖的<code>go.mod</code>文件可以发现它的<code>module</code>名</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>module github.com/gin-gonic/gin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Gin 的模块名就是下载依赖时使用的地址，这也是通常而言推荐模块名格式，<code>域名/用户/仓库名</code>。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>有一个需要注意的点是，当主版本大于 1 时，主版本号要体现在模块名中，例如</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>github.com/my/example</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果版本升级到了 v2.0.0，那么模块名就需要修改成如下</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>github.com/my/example/v2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果原有项目引用了老版本，且新版本不加以区分的话，在引用依赖时由于路径都一致，所以使用者并不能区分主版本变化所带来的不兼容变动，这样就可能会造成程序错误。</p></div><p><strong>Deprecation</strong></p><p>在<code>module</code>的上一行开头注释<code>Deprecated</code>来表示该模块已弃用，例如</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// Deprecated: use example.com/mod/v2 instead.</span></span>
<span class="line"><span>module example.com/mod</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>go</strong></p><p><code>go</code>关键字表示了当前编写当前项目所用到的 Go 版本，版本号必须遵循语义化规则，根据 go 版本的不同，Go Mod 会表现出不同的行为，下方是一个简单示例，关于 Go 可用的版本号自行前往官方查阅。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>go 1.20</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>require</strong></p><p><code>require</code>关键字表示引用了一个外部依赖，例如</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>require github.com/gin-gonic/gin v1.9.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>格式是<code>require 模块名 版本号</code>，有多个引用时可以使用括号括起来</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>require (</span></span>
<span class="line"><span>   github.com/bytedance/sonic v1.8.0 // indirect</span></span>
<span class="line"><span>)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>带有<code>// indirect</code>注释的表示该依赖没有被当前项目直接引用，可能是项目直接引用的依赖引用了该依赖，所以对于当前项目而言就是间接引用。前面提到过主板变化时要体现在模块名上，如果不遵循此规则的模块被称为不规范模块，在<code>require</code>时，就会加上 incompatible 注释。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>require example.com/m v4.1.2+incompatible</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>伪版本</strong></p><p>在上面的<code>go.mod</code>文件中，可以发现有一些依赖包的版本并不是语义化的版本号，而是一串不知所云的字符串，这其实是对应版本的 CommitID，语义化版本通常指的是某一个 Release。伪版本号则可以细化到指定某一个 Commit，通常格式为<code>vx.y.z-yyyyMMddHHmmss-CommitId</code>，由于其<code>vx.y.z</code>并不一定真实存在，所以称为伪版本，例如下面例子中的<code>v0.0.0</code>并不存在，真正有效的是其后的 12 位 CommitID。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// CommitID一般取前12位</span></span>
<span class="line"><span>github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 // indirect</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>同理，在下载依赖时也可以指定 CommitID 替换语义化版本号</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>go get github.com/chenzhuoyu/base64x@fe3a3abad311</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>exclude</strong></p><p><code>exclude</code>关键字表示了不加载指定版本的依赖，如果同时有<code>require</code>引用了相同版本的依赖，也会被忽略掉。该关键字仅在主模块中才生效。例如</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>exclude golang.org/x/net v1.2.3</span></span>
<span class="line"><span></span></span>
<span class="line"><span>exclude (</span></span>
<span class="line"><span>    golang.org/x/crypto v1.4.5</span></span>
<span class="line"><span>    golang.org/x/text v1.6.7</span></span>
<span class="line"><span>)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>replace</strong></p><p><code>replace</code>将会替换掉指定版本的依赖，可以使用模块路径和版本替换又或者是其他平台指定的文件路径，例子</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>replace golang.org/x/net v1.2.3 =&gt; example.com/fork/net v1.4.5</span></span>
<span class="line"><span></span></span>
<span class="line"><span>replace (</span></span>
<span class="line"><span>    golang.org/x/net v1.2.3 =&gt; example.com/fork/net v1.4.5</span></span>
<span class="line"><span>    golang.org/x/net =&gt; example.com/fork/net v1.4.5</span></span>
<span class="line"><span>    golang.org/x/net v1.2.3 =&gt; ./fork/net</span></span>
<span class="line"><span>    golang.org/x/net =&gt; ./fork/net</span></span>
<span class="line"><span>)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>仅<code>=&gt;</code>左边的版本被替换，其他版本的同一个依赖照样可以正常访问，无论是使用本地路径还是模块路径指定替换，如果替换模块具有 <code>go.mod </code>文件，则其<code>module</code>指令必须与所替换的模块路径匹配。</p><p><strong>retract</strong></p><p><code>retract</code>指令表示，不应该依赖<code>retract</code>所指定依赖的版本或版本范围。例如在一个新的版本发布后发现了一个重大问题，这个时候就可以使用<code>retract</code>指令。</p><p>撤回一些版本</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>retract (</span></span>
<span class="line"><span>    v1.0.0 // Published accidentally.</span></span>
<span class="line"><span>    v1.0.1 // Contains retractions only.</span></span>
<span class="line"><span>)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>撤回版本范围</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>retract v1.0.0</span></span>
<span class="line"><span>retract [v1.0.0, v1.9.9]</span></span>
<span class="line"><span>retract (</span></span>
<span class="line"><span>    v1.0.0</span></span>
<span class="line"><span>    [v1.0.0, v1.9.9]</span></span>
<span class="line"><span>)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="go-sum" tabindex="-1"><a class="header-anchor" href="#go-sum"><span>go.sum</span></a></h3><p><code>go.sum</code>文件在创建项目之初并不会存在，只有在真正引用了外部依赖后，才会生成该文件，<code>go.sum</code>文件并不适合人类阅读，也不建议手动修改该文件。它的作用主要是解决一致性构建问题，即不同的人在不同的环境中使用同一个的项目构建时所引用的依赖包必须是完全相同的，这单单靠一个<code>go.mod</code>文件是无法保证的。</p><p>接下来看看下载一个依赖时，Go 从头到尾都做了些什么事，首先使用如下命令下载一个依赖</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>go get github.com/bytedance/sonic v1.8.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>go get 命令首先会将依赖包下载到本地的缓存目录中，通常该目录为<code>$GOMODCACHE/cache/download/</code>，该目录根据域名来划分不同网站的依赖包，所以你可能会看到如下的目录结构</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cloud.google.com/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      go.opencensus.io/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     gopkg.in/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          nhooyr.io/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dmitri.shuralyov.com/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  go.opentelemetry.io/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gorm.io/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           rsc.io/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">github.com/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            go.uber.org/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          honnef.co/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         sumdb/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go.etcd.io/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            golang.org/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           lukechampine.com/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go.mongodb.org/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        google.golang.org/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    modernc.org/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么上例中下载的依赖包存放的路径就位于</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$GOMODCACHE/cache/download/github.com/bytedance/sonic/@v/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可能的目录结构如下，会有好几个版本命名的文件</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">list</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         v1.8.0.lock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v1.8.0.ziphash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v1.8.3.mod</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">v1.5.0.mod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   v1.8.0.mod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   v1.8.3.info</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     v1.8.3.zip</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">v1.8.0.info</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v1.8.0.zip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   v1.8.3.lock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     v1.8.3.ziphash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通常情况下，该目录下一定有一个<code>list</code>文件，用于记录该依赖已知的版本号，而对于每一个版本而言，都会有如下的文件：</p><ul><li><code>zip</code>：依赖的源码压缩包</li><li><code>ziphash</code>：根据依赖压缩包所计算出的哈希值</li><li><code>info</code>：json 格式的版本元数据</li><li><code>mod</code>：该版本的<code>go.mod</code>文件</li><li><code>lock</code>：临时文件，官方也没说干什么用的</li></ul><p>一般情况下，Go 会计算压缩包和<code>go.mod</code>两个文件的哈希值，然后再根据 GOSUMDB 所指定的服务器（默认是 sum.golang.org）查询该依赖包的哈希值，如果本地计算出的哈希值与查询得到的结果不一致，那么就不会再向下执行。如果一致的话，就会更新<code>go.mod</code>文件，并向<code>go.sum</code>文件插入两条记录，大致如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>github.com/bytedance/sonic v1.8.0 h1:ea0Xadu+sHlu7x5O3gKhRpQ1IKiMrSiHttPF0ybECuA=</span></span>
<span class="line"><span>github.com/bytedance/sonic v1.8.0/go.mod h1:i736AoUSYt75HyZLoJW9ERYxcy6eaN6h4BZXU064P/U=</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>假如禁用了 GOSUMDB，Go 会直接将本地计算得到的哈希值写入<code>go.sum</code>文件中，一般不建议这么做。</p></div><p>正常情况下每一个依赖都会有两条记录，第一个是压缩包的哈希值，第二个是依赖包的<code>go.mod</code>文件的哈希值，记录格式为<code>模块名 版本号 算法名称:哈希值</code>，有些比较古老的依赖包可能没有<code>go.mod</code>文件，所以就不会有第二条哈希记录。当这个项目在另一个人的环境中构建时，Go 会根据<code>go.mod</code>中指定的本地依赖计算哈希值，再与<code>go.sum</code>中记录的哈希值进行比对，如果哈希值不一致，则说明依赖版本不同，就会拒绝构建。发生这种情况时，本地依赖和<code>go.sum</code>文件都有可能被修改过，但是由于<code>go.sum</code>是经过 GOSUMDB 查询记录的，所以会倾向于更相信<code>go.sum</code>文件。</p><h3 id="私有模块" tabindex="-1"><a class="header-anchor" href="#私有模块"><span>私有模块</span></a></h3><p>Go Mod 大多数工具都是针对开源项目而言的，不过 Go 也对私有模块进行了支持。对于私有项目而言，通常情况下需要配置以下几个环境配置来进行模块私有处理</p><ul><li><code>GOPROXY</code> ：依赖的代理服务器集合</li><li><code>GOPRIVATE</code> ：私有模块的模块路径前缀的通用模式列表，如果模块名符合规则表示该模块为私有模块，具体行为与 GONOPROXY 和 GONOSUMDB 一致。</li><li><code>GONOPROXY</code> ：不从代理中下载的模块路径前缀的通用模式列表，如果符合规则在下载模块时不会走 GOPROXY，尝试直接从版本控制系统中下载。</li><li><code>GONOSUMDB</code> ：不进行 GOSUMDB 公共校验的模块路径前缀的通用模式列表，如果符合在下载模块校验时不会走 checksum 的公共数据库。</li><li><code>GOINSECURE</code> ：可以通过 HTTP 和其他不安全协议检索的模块路径前缀的通用模式列表。</li></ul><h2 id="工作区" tabindex="-1"><a class="header-anchor" href="#工作区"><span>工作区</span></a></h2><p>前面提到了<code>go.mod</code>文件支持<code>replace</code>指令，这使得我们可以暂时使用一些本地来不及发版的修改，如下所示</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>replace (</span></span>
<span class="line"><span>  github.com/246859/hello v1.0.1 =&gt; ./hello</span></span>
<span class="line"><span>)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在编译时，go 就会使用本地的 hello 模块，在日后发布新版本后再将其去掉。</p><p>但如果使用了 <code>replace</code>指令的话会修改<code>go.mod</code>文件的内容，并且该修改可能会被误提交到远程仓库中，这一点是我们不希望看到的，因为<code>replace</code>指令所指定的 target 是一个文件路径而非网络 URL，这台机器上能用的路径可能到另一台机器上就不能用了，文件路径在跨平台方面也会是一个大问题。为了解决这类问题，工作区便应运而生。</p><p>工作区(workspace)，是 Go 在 1.18 引入的关于多模块管理的一个新的解决方案，旨在更好的进行本地的多模块开发工作，下面将通过一个示例进行讲解。</p><p>示例仓库：<a href="https://github.com/246859/work" target="_blank" rel="noopener noreferrer">246859/work: go work example (github.com)</a></p><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3><p>首先项目下有两个独立的 go 模块，分别是<code>auth</code>，<code>user</code></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">LICENSE</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">README.md</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">auth</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go.work</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">user</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>auth</code>模块依赖于<code>user</code>模块的结构体<code>User</code>，内容如下</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> auth</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;errors&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;github.com/246859/work/user&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Verify user credentials if is ok</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Verify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">user</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">User</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> query</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> err</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">err</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> password</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> !=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">errors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">New</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;authentication failed&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">nil</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> query</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">username</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> username</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;jack&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;jack123456&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">nil</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">errors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">New</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;user not found&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>user 模块内容如下</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> user</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> User</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">     string</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Password</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> string</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Age</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      int</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个项目中，我们可以这样编写<code>go.work</code>文件</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>go 1.22</span></span>
<span class="line"><span></span></span>
<span class="line"><span>use (</span></span>
<span class="line"><span>  ./auth</span></span>
<span class="line"><span>  ./user</span></span>
<span class="line"><span>)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其内容非常容易理解，使用<code>use</code>指令，指定哪些模块参与编译，接下来运行 auth 模块中的代码</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// auth/example/main.go</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;fmt&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;github.com/246859/work/auth&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;github.com/246859/work/user&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> auth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Verify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">User</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;jack&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;jack123456&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> err</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    panic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行如下命令，通过结果得知成功导入了模块。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./auth/example</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在以前的版本，对于这两个独立的模块，如果 auth 模块想要使用 user 模块中的代码只有两种办法</p><ol><li>提交 user 模块的修改并推送到远程仓库，发布新版本，然后修改<code>go.mod</code>文件为指定版本</li><li>修改<code>go.mod</code>文件将依赖重定向到本地文件</li></ol><p>两种方法都需要修改<code>go.mod</code>文件，而工作区的存在就是为了能够在不修改<code>go.mod</code>文件的情况下导入其它模块。不过需要明白的一点是，<code>go.work</code>文件仅用在开发过程中，它的存在只是为了更加方便的进行本地开发，而不是进行依赖管理，它只是暂时让你略过了提交到发版的这一过程，可以让你马上使用 user 模块的新修改而无需进行等待，当 user 模块测试完毕后，最后依旧需要发布新版本，并且 auth 模块最后仍然要修改<code>go.mod</code>文件引用最新版本（这一过程可以用<code>go work sync</code>命令来完成），因此在正常的 go 开发过程中，<code>go.work</code>也不应该提交到 VCS 中（示例仓库中的<code>go.work</code>仅用于演示），因为其内容都是依赖于本地的文件，且其功能也仅限于本地开发。</p><h3 id="命令" tabindex="-1"><a class="header-anchor" href="#命令"><span>命令</span></a></h3><p>下面是一些工作区的命令</p><table><thead><tr><th>命令</th><th>介绍</th></tr></thead><tbody><tr><td>edit</td><td>编辑<code>go.work</code></td></tr><tr><td>init</td><td>初始化一个新的工作区</td></tr><tr><td>sync</td><td>同步工作区的模块依赖</td></tr><tr><td>use</td><td>往<code>go.work</code>中添加一个新模块</td></tr><tr><td>vendor</td><td>将依赖按照 vendor 格式进行复制</td></tr></tbody></table>`,100)),l("p",null,[s[4]||(s[4]=i("前往")),e(n,{to:"/cmd.html#work"},{default:h(()=>s[3]||(s[3]=[i("go work cmd")])),_:1}),s[5]||(s[5]=i("了解命令的更多有关信息"))]),s[8]||(s[8]=a(`<h3 id="指令" tabindex="-1"><a class="header-anchor" href="#指令"><span>指令</span></a></h3><p><code>go.work</code>文件的内容很简单，只有三个指令</p><ul><li><code>go</code>，指定 go 版本</li><li><code>use</code>，指定使用的模块</li><li><code>replace</code>，指定替换的模块</li></ul><p>除了<code>use</code>指令外，其它两个基本上等同于<code>go.mod</code>中的指令，只不过<code>go.work</code>中的的<code>replace</code>指令会作用于所有的模块，一个完整的<code>go.work</code>如下所示。</p><div class="language-tex line-numbers-mode" data-highlighter="shiki" data-ext="tex" data-title="tex" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">go 1.22</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">use(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ./auth</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ./user</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">repalce github.com/246859/hello v1.0.0 =&gt; /home/jack/code/hello</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5))])}const E=t(m,[["render",u],["__file","115.module.html.vue"]]),f=JSON.parse('{"path":"/essential/senior/115.module.html","title":"模块","lang":"zh-CN","frontmatter":{"date":"2022-09-02T00:00:00.000Z","description":"模块 每一个现代语言都会有属于自己的一个成熟的依赖管理工具，例如 Java 的 Gradle，Python 的 Pip，NodeJs 的 Npm 等，一个好的依赖管理工具可以为开发者省去不少时间并且可以提升开发效率。然而 Go 在早期并没有一个成熟的依赖管理解决方案，那时所有的代码都存放在 GOPATH 目录下，对于工程项目而言十分的不友好，版本混乱，...","head":[["meta",{"property":"og:url","content":"https://golang.halfiisland.com/essential/senior/115.module.html"}],["meta",{"property":"og:site_name","content":"Golang 中文学习文档"}],["meta",{"property":"og:title","content":"模块"}],["meta",{"property":"og:description","content":"模块 每一个现代语言都会有属于自己的一个成熟的依赖管理工具，例如 Java 的 Gradle，Python 的 Pip，NodeJs 的 Npm 等，一个好的依赖管理工具可以为开发者省去不少时间并且可以提升开发效率。然而 Go 在早期并没有一个成熟的依赖管理解决方案，那时所有的代码都存放在 GOPATH 目录下，对于工程项目而言十分的不友好，版本混乱，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://golang.halfiisland.com/images/essential/md_1.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-15T16:58:36.000Z"}],["meta",{"property":"article:published_time","content":"2022-09-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-15T16:58:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模块\\",\\"image\\":[\\"https://golang.halfiisland.com/images/essential/md_1.png\\",\\"https://golang.halfiisland.com/images/essential/md_2.png\\",\\"https://golang.halfiisland.com/images/essential/md_3.png\\",\\"https://golang.halfiisland.com/images/essential/md_4.png\\",\\"https://golang.halfiisland.com/images/essential/md_5.png\\",\\"https://golang.halfiisland.com/images/essential/md_6.png\\",\\"https://golang.halfiisland.com/images/essential/md_7.png\\",\\"https://golang.halfiisland.com/images/essential/md_8.svg\\"],\\"datePublished\\":\\"2022-09-02T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-15T16:58:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"寒江蓑笠翁\\",\\"url\\":\\"https://246859.github.io/\\",\\"email\\":\\"2633565580@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"编写模块","slug":"编写模块","link":"#编写模块","children":[{"level":3,"title":"准备","slug":"准备","link":"#准备","children":[]},{"level":3,"title":"创建","slug":"创建","link":"#创建","children":[]},{"level":3,"title":"编写","slug":"编写","link":"#编写","children":[]},{"level":3,"title":"测试","slug":"测试","link":"#测试","children":[]},{"level":3,"title":"文档","slug":"文档","link":"#文档","children":[]},{"level":3,"title":"上传","slug":"上传","link":"#上传","children":[]},{"level":3,"title":"引用","slug":"引用","link":"#引用","children":[]}]},{"level":2,"title":"设置代理","slug":"设置代理","link":"#设置代理","children":[]},{"level":2,"title":"下载依赖","slug":"下载依赖","link":"#下载依赖","children":[{"level":3,"title":"代码引用","slug":"代码引用","link":"#代码引用","children":[]},{"level":3,"title":"安装命令行","slug":"安装命令行","link":"#安装命令行","children":[]}]},{"level":2,"title":"模块管理","slug":"模块管理","link":"#模块管理","children":[{"level":3,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[]},{"level":3,"title":"模块存储","slug":"模块存储","link":"#模块存储","children":[]},{"level":3,"title":"版本选择","slug":"版本选择","link":"#版本选择","children":[]},{"level":3,"title":"go.mod","slug":"go-mod","link":"#go-mod","children":[]},{"level":3,"title":"go.sum","slug":"go-sum","link":"#go-sum","children":[]},{"level":3,"title":"私有模块","slug":"私有模块","link":"#私有模块","children":[]}]},{"level":2,"title":"工作区","slug":"工作区","link":"#工作区","children":[{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":3,"title":"命令","slug":"命令","link":"#命令","children":[]},{"level":3,"title":"指令","slug":"指令","link":"#指令","children":[]}]}],"git":{"createdTime":1680529802000,"updatedTime":1734281916000,"contributors":[{"name":"Mister-Hope","username":"Mister-Hope","email":"mister-hope@outlook.com","commits":1,"url":"https://github.com/Mister-Hope"},{"name":"yihhao wang","username":"yihhao wang","email":"2633565580@qq.com","commits":3,"url":"https://github.com/yihhao wang"},{"name":"246859","username":"246859","email":"2633565580@qq.com","commits":6,"url":"https://github.com/246859"}]},"readingTime":{"minutes":48.75,"words":7312},"filePathRelative":"essential/senior/115.module.md","localizedDate":"2022年9月2日","autoDesc":true,"excerpt":"\\n<p>每一个现代语言都会有属于自己的一个成熟的依赖管理工具，例如 Java 的 Gradle，Python 的 Pip，NodeJs 的 Npm 等，一个好的依赖管理工具可以为开发者省去不少时间并且可以提升开发效率。然而 Go 在早期并没有一个成熟的依赖管理解决方案，那时所有的代码都存放在 GOPATH 目录下，对于工程项目而言十分的不友好，版本混乱，依赖难以管理，为了解决这个问题，各大社区开发者百家争鸣，局面一时间混乱了起来，期间也不乏出现了一些佼佼者例如 Vendor，直到 Go1.11 官方终于推出了 Go Mod 这款官方的依赖管理工具，结束了先前的混乱局面，并在后续的更新中不断完善，淘汰掉了曾经老旧的工具。时至今日，在撰写本文时，Go 发行版本已经到了 1.20，在今天几乎所有的 Go 项目都在采用 Go Mod，所以在本文也只会介绍 Go Mod，官方对于 Go 模块也编写了非常细致的文档：<a href=\\"https://go.dev/ref/mod\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go Modules Reference</a>。</p>"}');export{E as comp,f as data};
