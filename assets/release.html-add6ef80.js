import{_ as t,V as l,W as p,X as e,Y as n,Z as a,a0 as o,F as i}from"./framework-f06be456.js";const c={},r=e("h1",{id:"更新日志",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#更新日志","aria-hidden":"true"},"#"),n(" 更新日志")],-1),d=e("p",null,[e("strong",null,"维护版本：")],-1),u=e("ul",null,[e("li",null,"go1.23，首次发布：2024-08-13，最后更新：go1.23.0 (2024-08-13)"),e("li",null,"go1.22，首次发布：2024-02-08，最后更新：go1.22.6 (2024-08-06)")],-1),g={href:"https://go.dev/doc/devel/release",target:"_blank",rel:"noopener noreferrer"},k=e("code",null,"主版本",-1),h=e("code",null,"次版本",-1),v=e("code",null,"补丁版本",-1),_={href:"https://semver.org/lang/zh-CN/",target:"_blank",rel:"noopener noreferrer"},m=e("p",null,"Go团队每半年发布一个二级版本，并且只有最新的两个二级版本是长期维护，维护时间都是六个月，鉴于Go每一次更新都保持着相当高的兼容性，建议在新版本稳定后及时将Go升级到最新版。",-1),b={href:"https://go.dev/doc/go1compat",target:"_blank",rel:"noopener noreferrer"},f=e("div",{class:"hint-container tip"},[e("p",{class:"hint-container-title"},"提示"),e("p",null,"此页面只是对官方日志的一个简单搬运，不定期更新，想获取最新消息还请前往官网。")],-1),G=e("h2",{id:"_1-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-23","aria-hidden":"true"},"#"),n(" 1.23")],-1),x=e("p",null,"首次发布：2024-08-13",-1),y=e("p",null,"最后更新：go1.23.0 (2024-08-13)",-1),w={href:"https://go.dev/doc/go1.23",target:"_blank",rel:"noopener noreferrer"},R={href:"https://go.dev/doc/devel/release#go1.23.0",target:"_blank",rel:"noopener noreferrer"},P=e("p",null,[e("strong",null,"语言层面")],-1),q={href:"https://go.dev/wiki/RangefuncExperiment",target:"_blank",rel:"noopener noreferrer"},N=o(`<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">Upper</span><span class="token punctuation">(</span>s <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> iter<span class="token punctuation">.</span>Seq2<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>yield <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> i<span class="token punctuation">,</span> s1 <span class="token operator">:=</span> <span class="token keyword">range</span> s <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token operator">!</span><span class="token function">yield</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> strings<span class="token punctuation">.</span><span class="token function">ToUpper</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	sl <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;golang&quot;</span><span class="token punctuation">}</span>
	<span class="token keyword">for</span> i<span class="token punctuation">,</span> s <span class="token operator">:=</span> <span class="token keyword">range</span> <span class="token function">Upper</span><span class="token punctuation">(</span>sl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d : %s\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> s<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//0 : HELLO</span>
<span class="token comment">//1 : WORLD</span>
<span class="token comment">//2 : GOLANG</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是一个比较实用的特性，一般会结合泛型来用。</p>`,2),S=o(`<p><strong>标准库</strong></p><ol><li><p>新增标准库<code>iter</code>，它定义和描述了关于迭代器的详细信息</p></li><li><p><code>maps</code>库新增了若干个迭代器函数</p></li><li><p><code>slices</code>库新增了若干个迭代器函数</p></li><li><p>新增<code>structs</code>库，提供了可以修改结构体属性的能力，比如内存布局</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Person <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Name <span class="token builtin">string</span>
	Age  <span class="token builtin">int</span>
	<span class="token boolean">_</span>    structs<span class="token punctuation">.</span>HostLayout
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>优化了<code>time</code>标准库的实现</p></li></ol><p><strong>Linker</strong></p><ol><li><p>处理<code>//go:linkname</code>的滥用，对于一些经常被引用的API暂时允许其存在，比如<code>runtime.memhash64</code>，<code>runtime.nanotime</code>等等，此后对于其他的新引用将不会允许。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">//go:linkname gcinit runtime.gcinit</span>
<span class="token keyword">func</span> <span class="token function">gcinit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">gcinit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>像这种代码就无法通过编译</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>link: main: invalid reference to runtime.gcinit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><p><strong>工具链</strong></p><ol><li>新增<code>go telemetry</code> 命令用于遥测数据管理</li></ol><h2 id="_1-22" tabindex="-1"><a class="header-anchor" href="#_1-22" aria-hidden="true">#</a> 1.22</h2><p>首次发布：2024-02-06</p><p>最后更新：go1.22.6（released 2024-08-06）</p>`,9),T={href:"https://go.dev/doc/go1.22",target:"_blank",rel:"noopener noreferrer"},O={href:"https://go.dev/doc/devel/release#go1.22.0",target:"_blank",rel:"noopener noreferrer"},D=o(`<p><strong>语言层面</strong></p><ol><li><p>解决了go语言循环变量的问题</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> wg sync<span class="token punctuation">.</span>WaitGroup
	<span class="token keyword">const</span> n <span class="token operator">=</span> <span class="token number">10</span>
	wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
			wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这段代码在1.22前，会输出10个9，在1.22后则会正常输出0到9。</p></li><li><p><code>for range</code>现在支持数字，比如</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> <span class="token number">10</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><strong>标准库</strong></p><ol><li>增强了<code>net/http</code>标准库的路由</li></ol><h2 id="_1-21" tabindex="-1"><a class="header-anchor" href="#_1-21" aria-hidden="true">#</a> 1.21</h2><p>首次发布：2023-08-08</p><p>最后更新：go1.21.13 (released 2024-08-06)</p>`,7),L={href:"https://go.dev/doc/go1.21",target:"_blank",rel:"noopener noreferrer"},C={href:"https://go.dev/doc/devel/release#go1.21.0",target:"_blank",rel:"noopener noreferrer"},E=e("p",null,[e("strong",null,"语言层面")],-1),W=o("<li><p>新增了两个内置函数<code>min</code> ，<code>max</code>，用于计算最大值最小值。</p></li><li><p>新增内置函数<code>clear</code>，用于清空map和slice</p></li><li><p>更新了<code>package</code>初始化顺序</p><ul><li>按导入路径对所有包进行排序</li><li>重复执行，直到包的列表为空</li><li>找到列表中所有的导入都已被初始化的第一个包</li><li>初始化该包并将其从列表中删除</li></ul></li><li><p>提高和改进了类型推理的能力和精度，主要是泛型相关。</p></li>",4),j=e("code",null,"for range",-1),B={href:"https://github.com/golang/go/wiki/LoopvarExperiment",target:"_blank",rel:"noopener noreferrer"},H={href:"https://go.googlesource.com/proposal/+/master/design/60078-loopvar.md",target:"_blank",rel:"noopener noreferrer"},M=o("<li><p>保证了<code>recover</code>的返回值不会是<code>nil</code>，如果在调用<code>panic</code>时参数为<code>nil</code>，则会触发另一个<code>panic</code>，返回<code>*runtime.PanicNilError</code>。为了兼容性，在编译时设置<code>GODEBUG=panicnil=1</code>允许向<code>panic</code>传入<code>nil</code>。</p></li>",1),U=o("<p><strong>标准库</strong></p><ol><li>新增<code>log/slog</code>库，提供标准的结构化日志库</li><li>新增<code>testing/slogtest</code>库，用于验证<code>slog.Handler</code>的实现</li><li>新增<code>slices</code>库，提供了一系列泛型函数用于操作切片。</li><li>新增<code>maps</code>库，提供了一系列泛型函数用于操作map</li><li>新增<code>cmp</code>库，用于比较有序类型。</li></ol><p><strong>其他</strong></p>",3),A=e("li",null,"go1.21.0至少在windows系统上至少需要win10或者Windows Server 2016版本以上才能运行，先前的版本不再支持。",-1),V=e("li",null,"go1.21.0至少需要在macOS 10.15 Catalina或者更新的版本才能运行，先前的版本不再支持。",-1),z=e("li",null,"新增了实验性的WebAssembly System Interface，Go依旧在WASM这块不断的探索。",-1),F={href:"https://go.dev/doc/pgo",target:"_blank",rel:"noopener noreferrer"},I=e("code",null,"default.pgo",-1),X=e("li",null,"当打印非常深的运行时调用栈时，从原来的只打印前一百个帧，到现在分别打印前50的最后的50个帧。",-1),K=e("li",null,"优化了在Unix平台CGO的调用性能，从1-3微秒优化到了现在的100-200纳秒。",-1),Y=e("li",null,"在1.21版本，编译速度提升了接近6%，这主要归功于编译器本身使用PGO来构建。",-1),Z=e("h2",{id:"_1-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-20","aria-hidden":"true"},"#"),n(" 1.20")],-1),J=e("p",null,"首次发布：2023-02-01",-1),Q=e("p",null,"最后更新：go1.20.14 (released 2024-02-06)",-1),$={href:"https://go.dev/doc/go1.20",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://go.dev/doc/devel/release#go1.20",target:"_blank",rel:"noopener noreferrer"},en=o("<p><strong>语言层面</strong></p><ol><li>在将切片类型转换为数组时，原来需要对指针数组解引用<code>*(*[4byte])(x)</code>来避免和切片操作同一个底层数组，现在可以直接这么写<code>[4]byte(x)</code>。</li><li><code>unsafe</code>新增了<code>SliceData</code>，<code>String</code>，<code>StringData</code>函数，用于构建和结构切片与字符串值。</li></ol><p><strong>标准库</strong></p><ol><li>新增<code>crypto/ecdh</code>库，提供了对于ECDH(Elliptic Curve Diffie-Hellman，一种非对称加密方法)的支持。</li><li>go1.20扩展了对error包装的支持，允许一个error包装多个error。</li><li>新增<code>net/http.ResponseContorller</code>，提供了一种更清晰、更易于发现的方法来添加每个handler controls。</li><li><code>httputil.ReverseProxy</code>包含了一个新的Rewrite Hook函数，用于取代之前的Director Hook。</li></ol><p><strong>其他</strong></p>",5),sn=e("li",null,"go1.20是最后一个支持win7，8，Server2008和Server2012的版本，在未来版本中不再提供支持。",-1),an=e("li",null,"go1.20是最后一个支持macOS 10.13或10.14的版本，未来版本将不再提供支持。",-1),on=e("li",null,"在1.18和1.19版本中，由于泛型的出现，相较于1.17编译速度出现了倒退，go1.20编译速度将会提升10%左右。",-1),tn=e("li",null,"发布PGO(Profile-guided optimization)的预览版本，这是一种计算机界的编译器优化技术，可以提高运行时性能。",-1),ln=e("li",null,"在go1.20，在没有C toolchains的系统上，go command禁用cgo。",-1),pn={href:"https://go.dev/testing/coverage/",target:"_blank",rel:"noopener noreferrer"},cn=e("li",null,"对GC进行了改进，提高了稳定性，减少内存开销，提升了整体2%的CPU性能。",-1),rn=e("h2",{id:"_1-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-19","aria-hidden":"true"},"#"),n(" 1.19")],-1),dn=e("p",null,"首次发布：2022-08-02",-1),un=e("p",null,"最后更新：go1.19.13 (released 2023-09-06)",-1),gn={href:"https://go.dev/doc/go1.19",target:"_blank",rel:"noopener noreferrer"},kn={href:"https://go.dev/doc/devel/release#go1.19",target:"_blank",rel:"noopener noreferrer"},hn=o('<p><strong>重要变化</strong></p><ol><li><p>内存模型向c/c++看齐</p></li><li><p><code>sync/atomic</code>包现在提供了更多的类型可供使用</p></li><li><p>支持使用<code>runtime/debug.SetMemoryLimit</code>函数对go内存进行软限制，在某些情况下可以提供内存利用效率</p></li><li><p>运行时现在会根据协程栈的平均使用情况来选择一个合适的大小为其初始化栈空间内存，这样可以避免频繁的栈扩容缩容</p></li></ol><h2 id="_1-18" tabindex="-1"><a class="header-anchor" href="#_1-18" aria-hidden="true">#</a> 1.18</h2><p>首次发布：2022-03-15</p><p>最后更新：go1.18.10 (released 2023-01-10)</p>',5),vn={href:"https://go.dev/doc/go1.18",target:"_blank",rel:"noopener noreferrer"},_n={href:"https://go.dev/doc/devel/release#go1.18",target:"_blank",rel:"noopener noreferrer"},mn=o('<p><strong>语言层面</strong></p><ol><li>重量级更新，支持泛型，类型集接口，参数类型约束</li></ol><p><strong>其它</strong></p><ol><li>优化了<code>append</code>函数的扩容行为</li><li>新增<code>debug/buildinfo</code>包，可以在运行时获取go程序的构建信息</li><li>gofmt现在可以并发的格式化源文件</li></ol><h2 id="_1-17" tabindex="-1"><a class="header-anchor" href="#_1-17" aria-hidden="true">#</a> 1.17</h2><p>首次发布：2021-08-16</p><p>最后更新：go1.17.13 (released 2022-08-01)</p>',7),bn={href:"https://go.dev/doc/go1.17",target:"_blank",rel:"noopener noreferrer"},fn={href:"https://go.dev/doc/devel/release#go1.17",target:"_blank",rel:"noopener noreferrer"},Gn=o('<p><strong>语言层面</strong></p><ol><li>新增<code>unsafe.Add</code>函数，支持指针运算</li><li>新增<code>unsafe.Slice</code>函数，支持获取切片的底层数组的指针</li><li>切片现在可以转换为数组指针类型，<code>[]T =&gt; *[N]T</code>，前提是数组的长度要小于等于切片的长度</li></ol><h2 id="_1-16" tabindex="-1"><a class="header-anchor" href="#_1-16" aria-hidden="true">#</a> 1.16</h2><p>首次发布：2021-02-16</p><p>最后更新：go1.16.15 (released 2022-03-03)</p>',5),xn={href:"https://go.dev/doc/go1.16",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://go.dev/doc/devel/release#go1.16",target:"_blank",rel:"noopener noreferrer"},wn=o('<p><strong>重要变化</strong></p><p>该版本没什么重要的语法上的变更，一些重要的变化如下</p><ol><li>弃用<code>ioutil</code>包</li><li>支持通过<code>//go:embed</code>指令来将一些静态文件嵌入到程序中</li><li>新增<code>io/fs.Fs</code>类型，对文件系统进行了更好的抽象</li></ol><h2 id="_1-15" tabindex="-1"><a class="header-anchor" href="#_1-15" aria-hidden="true">#</a> 1.15</h2><p>首次发布：2020-08-11</p><p>最后更新：go1.15.15 (released 2021-08-05)</p>',6),Rn={href:"https://go.dev/doc/go1.15",target:"_blank",rel:"noopener noreferrer"},Pn={href:"https://go.dev/doc/devel/release#go1.15",target:"_blank",rel:"noopener noreferrer"},qn=o(`<p><strong>重要变化</strong></p><p>该版本没什么重要的语法上的变更，一些重要的变化如下</p><ol><li><p>优化了小对象的分配效率</p></li><li><p>新增了包<code>time/tzdata</code>，通过下面的方式支持将时区数据库嵌入到程序中，因为有很多系统本地并没有时区数据信息。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>improt <span class="token boolean">_</span> <span class="token string">&quot;time/tzdata&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>对go链接器做出了重大改进，减少了其资源使用，并提高了代码的健壮性</p></li><li><p>在某些情况下，允许<code>unsafe.Pointer</code>转换为<code>uinptr</code></p></li></ol><h2 id="_1-14" tabindex="-1"><a class="header-anchor" href="#_1-14" aria-hidden="true">#</a> 1.14</h2><p>首次发布：2020-02-25</p><p>最后更新：go1.14.15 (released 2021-02-04)</p>`,6),Nn={href:"https://go.dev/doc/go1.14",target:"_blank",rel:"noopener noreferrer"},Sn={href:"https://go.dev/doc/devel/release#go1.14",target:"_blank",rel:"noopener noreferrer"},Tn=o(`<p><strong>语言层面</strong></p><ol><li><p>支持方法集接口类型嵌套</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> MyIO <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	io<span class="token punctuation">.</span>WriteCloser
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>**其它 **</p><ol><li>引用了开放编码优化，<code>defer</code>调用的开销降低至几乎跟原生调用一样</li><li>支持协程间的异步抢占，没有函数调用的循环将不会再永久阻塞调度</li></ol><h2 id="_1-13" tabindex="-1"><a class="header-anchor" href="#_1-13" aria-hidden="true">#</a> 1.13</h2><p>首次发布：2019-09-03</p><p>最后更新：go1.13.15 (released 2020-08-06)</p>`,7),On={href:"https://go.dev/doc/go1.13",target:"_blank",rel:"noopener noreferrer"},Dn={href:"https://go.dev/doc/devel/release#go1.13",target:"_blank",rel:"noopener noreferrer"},Ln=o(`<p><strong>语言层面</strong></p><ol><li><p>支持更现代的数字字面量，比如</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token number">0b101</span> <span class="token comment">// 二进制</span>
<span class="token number">0o10</span> <span class="token comment">// 十进制</span>
<span class="token number">0x1B</span> <span class="token comment">// 十六进制</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>支持下划线分割数字以带来更好的可读性</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token number">10_000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>虚数<code>i</code>的后缀现在可以是任何的二进制，十进制，十六进制，或浮点数数字</p></li></ol><p><strong>其它</strong></p><ol><li><code>GO111MODULE</code>值默认为<code>auto</code></li><li>新增<code>GOPRIVATE</code>环境变量来支持私有的依赖源</li><li>新增<code>GOSUMDB</code>环境环境</li><li><code>derfer</code>的使用开销降低了30%</li><li>当发生索引下标越界时，<code>panic</code>现在会打印出下标信息</li><li>go下载依赖时会进行语义化版本验证</li></ol><h2 id="_1-12" tabindex="-1"><a class="header-anchor" href="#_1-12" aria-hidden="true">#</a> 1.12</h2><p>首次发布：2019-02-25</p><p>最后更新：go1.12.17 (released 2020-02-12)</p>`,7),Cn={href:"https://go.dev/doc/go1.12",target:"_blank",rel:"noopener noreferrer"},En={href:"https://go.dev/doc/devel/release#go1.12",target:"_blank",rel:"noopener noreferrer"},Wn=o('<p><strong>重要变化</strong></p><p>该版本没什么重要的语法上的变更，一些重要的变化如下</p><ol><li>显著提高了堆的扫描性能</li><li>运行时将更积极的向操作系统释放申请的内存</li><li>用于下载go依赖的命令现在可以并发安全的使用</li></ol><h2 id="_1-11" tabindex="-1"><a class="header-anchor" href="#_1-11" aria-hidden="true">#</a> 1.11</h2><p>首次发布：2018-08-24</p><p>最后更新：go1.11.13 (released 2019-08-13)</p>',6),jn={href:"https://go.dev/doc/go1.11",target:"_blank",rel:"noopener noreferrer"},Bn={href:"https://go.dev/doc/devel/release#go1.11",target:"_blank",rel:"noopener noreferrer"},Hn=o('<p><strong>重要变化</strong></p><p>该版本没什么重要的语法上的变更，一些重要的变化如下</p><ol><li>GoMod首次发布，此前依赖管理的混乱局面将要结束</li><li>首次实验性的支持了WASM</li><li>运行时采用稀疏堆布局，不再限制堆大小</li></ol><h2 id="_1-10" tabindex="-1"><a class="header-anchor" href="#_1-10" aria-hidden="true">#</a> 1.10</h2><p>首次发布：2018-02-16</p><p>最后更新：go1.10.8 (released 2019-01-23)</p>',6),Mn={href:"https://go.dev/doc/go1.10",target:"_blank",rel:"noopener noreferrer"},Un={href:"https://go.dev/doc/devel/release#go1.10",target:"_blank",rel:"noopener noreferrer"},An=o('<p><strong>重要变化</strong></p><p>该版本没什么重要的语法上的变更，一些重要的变化如下</p><ol><li><code>go install</code>命令现在只用于安装和编译命令行工具，不再用于下载依赖</li><li><code>go get</code>命令现在用于下载源码依赖</li><li>go测试现在会缓存测试结果，并且会在运行前自动运行<code>go vet</code></li><li>显著降低了GC在活跃时造成的延时</li></ol><h2 id="_1-9" tabindex="-1"><a class="header-anchor" href="#_1-9" aria-hidden="true">#</a> 1.9</h2><p>首次发布：2017-08-24</p><p>最后更新：go1.9.7 (released 2018-06-05)</p>',6),Vn={href:"https://go.dev/doc/go1.9",target:"_blank",rel:"noopener noreferrer"},zn={href:"https://go.dev/doc/devel/release#go1.9",target:"_blank",rel:"noopener noreferrer"},Fn=o('<p><strong>语言层面</strong></p><ol><li>支持类型别名</li></ol><p><strong>其它</strong></p><ol><li>支持并行编译</li><li>新增并发安全的<code>sync.Map</code></li></ol><h2 id="_1-8" tabindex="-1"><a class="header-anchor" href="#_1-8" aria-hidden="true">#</a> 1.8</h2><p>首次发布：2017-02-16</p><p>最后更新：go1.8.7 (released 2018-02-07)</p>',7),In={href:"https://go.dev/doc/go1.8",target:"_blank",rel:"noopener noreferrer"},Xn={href:"https://go.dev/doc/devel/release#go1.8",target:"_blank",rel:"noopener noreferrer"},Kn=o(`<p><strong>语言层面</strong></p><ol><li><p>当两个结构体进行类型转换时，会忽略结构体tag的不同</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">type</span> T1 <span class="token keyword">struct</span> <span class="token punctuation">{</span>
        X <span class="token builtin">int</span> <span class="token string">\`json:&quot;foo&quot;\`</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">type</span> T2 <span class="token keyword">struct</span> <span class="token punctuation">{</span>
        X <span class="token builtin">int</span> <span class="token string">\`json:&quot;bar&quot;\`</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> v1 T1
    <span class="token keyword">var</span> v2 T2
    v1 <span class="token operator">=</span> <span class="token function">T1</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span> <span class="token comment">// now legal</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><strong>其它</strong></p><ol><li>垃圾收集造成的暂停时间低至10微秒，大部分情况下低于100微秒（可以看到几乎每个版本go都在努力改进GC）</li><li>调用<code>defer</code>的开销减少了接近一半</li><li>go调用c的开销减少了接近一半</li><li>优化了map的并发使用检测</li></ol><h2 id="_1-7" tabindex="-1"><a class="header-anchor" href="#_1-7" aria-hidden="true">#</a> 1.7</h2><p>首次发布：2016-08-15</p><p>最后更新：go1.7.6 (released 2017-05-23)</p>`,7),Yn={href:"https://go.dev/doc/go1.7",target:"_blank",rel:"noopener noreferrer"},Zn={href:"https://go.dev/doc/devel/release#go1.7",target:"_blank",rel:"noopener noreferrer"},Jn=o('<p><strong>重要变化</strong></p><ol><li>将<code>golang.org/x/net/context</code>加入标准库</li><li>gc时间相较于1.6大幅缩短</li><li><code>testing</code>包支持子测试</li></ol><h2 id="_1-6" tabindex="-1"><a class="header-anchor" href="#_1-6" aria-hidden="true">#</a> 1.6</h2><p>首次发布：2016-02-17</p><p>最后更新：go1.6.4 (released 2016-12-01)</p>',5),Qn={href:"https://go.dev/doc/go1.6",target:"_blank",rel:"noopener noreferrer"},$n={href:"https://go.dev/doc/devel/release#go1.6",target:"_blank",rel:"noopener noreferrer"},ne=o('<p><strong>重要变化</strong></p><p>该版本没有语法上的变更，下面是比较重要的变化</p><ol><li>对map进行并发使用检测，如果检测到了map正在并发使用会抛出<code>fatal</code></li><li>在发生<code>panic</code>时，只会打印正在运行协程的调用栈</li><li>支持HTTP/2</li></ol><h2 id="_1-5" tabindex="-1"><a class="header-anchor" href="#_1-5" aria-hidden="true">#</a> 1.5</h2><p>首次发布：2015-08-19</p><p>最后更新：go1.5.4 (released 2016-04-12)</p>',6),ee={href:"https://go.dev/doc/go1.5",target:"_blank",rel:"noopener noreferrer"},se={href:"https://go.dev/doc/devel/release#go1.5",target:"_blank",rel:"noopener noreferrer"},ae=o(`<p><strong>语言层面</strong></p><ol><li><p>在初始化map字面量的键时，允许省略元素类型</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>m <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span>Point<span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span>
    Point<span class="token punctuation">{</span><span class="token number">29.935523</span><span class="token punctuation">,</span> <span class="token number">52.891566</span><span class="token punctuation">}</span><span class="token punctuation">:</span>   <span class="token string">&quot;Persepolis&quot;</span><span class="token punctuation">,</span>
    Point<span class="token punctuation">{</span><span class="token operator">-</span><span class="token number">25.352594</span><span class="token punctuation">,</span> <span class="token number">131.034361</span><span class="token punctuation">}</span><span class="token punctuation">:</span> <span class="token string">&quot;Uluru&quot;</span><span class="token punctuation">,</span>
    Point<span class="token punctuation">{</span><span class="token number">37.422455</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">122.084306</span><span class="token punctuation">}</span><span class="token punctuation">:</span> <span class="token string">&quot;Googleplex&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// 省略类型</span>
m <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span>Point<span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span>
    <span class="token punctuation">{</span><span class="token number">29.935523</span><span class="token punctuation">,</span> <span class="token number">52.891566</span><span class="token punctuation">}</span><span class="token punctuation">:</span>   <span class="token string">&quot;Persepolis&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token operator">-</span><span class="token number">25.352594</span><span class="token punctuation">,</span> <span class="token number">131.034361</span><span class="token punctuation">}</span><span class="token punctuation">:</span> <span class="token string">&quot;Uluru&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token number">37.422455</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">122.084306</span><span class="token punctuation">}</span><span class="token punctuation">:</span> <span class="token string">&quot;Googleplex&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><strong>其它</strong></p><ol><li>运行时和编译器完全由go重写，不再包含任何c代码</li><li>支持并发垃圾收集，大大减少了程序暂停的时间</li><li><code>GOMAXPROCS</code>默认值变为机器的逻辑核数</li><li><code>internal</code>包的语义可以应用到任何地方，不再只局限于go的源码包</li><li>实验性的支持vendor依赖管理（终于开始着手处理依赖管理这部分了）</li></ol><h2 id="_1-4" tabindex="-1"><a class="header-anchor" href="#_1-4" aria-hidden="true">#</a> 1.4</h2><p>首次发布：2014-12-10</p><p>最后更新：go1.4.3 (released 2015-09-22)</p>`,7),oe={href:"https://go.dev/doc/go1.4",target:"_blank",rel:"noopener noreferrer"},te={href:"https://go.dev/doc/devel/release#go1.4",target:"_blank",rel:"noopener noreferrer"},le=o(`<p><strong>语言层面</strong></p><ol><li><p><code>for range</code>循环可以一个迭代参数，比如</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>for i := range x {
    ...
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是不能一个都没有</p></li><li><p>在调用双重引用类型的方法时，不再自动解引用</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> T <span class="token builtin">int</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>T<span class="token punctuation">)</span> <span class="token function">M</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> x <span class="token operator">*</span><span class="token operator">*</span>T

<span class="token comment">// 不被允许</span>
x<span class="token punctuation">.</span><span class="token function">M</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><strong>其它</strong></p><ol><li>在1.4之前，go的运行时都是由c编写的，现在全部由go完成</li><li>支持将包名修改为<code>internal</code>来表示该包的所有内容都是私有的不可导出</li></ol><h2 id="_1-3" tabindex="-1"><a class="header-anchor" href="#_1-3" aria-hidden="true">#</a> 1.3</h2><p>首次发布：2014-06-18</p><p>最后更新：go1.3.3 (released 2014-09-30)</p>`,7),pe={href:"https://go.dev/doc/go1.3",target:"_blank",rel:"noopener noreferrer"},ie={href:"https://go.dev/doc/devel/release#go1.3",target:"_blank",rel:"noopener noreferrer"},ce=o('<p><strong>重要变化</strong></p><p>该版本没有语法上的变更，一些比较重要的变化如下</p><ol><li>协程栈模型从分段栈改为连续栈，提升了栈扩容的性能。</li><li>提升了垃圾回收器指针判断的精度</li><li>在小容量map中进行迭代，顺序也会变得不可预测</li><li>由于一些运行时方面的完善，当前版本的go程序性能有了较大幅度的提升</li></ol><h2 id="_1-2" tabindex="-1"><a class="header-anchor" href="#_1-2" aria-hidden="true">#</a> 1.2</h2><p>首次发布：2013-12-01</p><p>最后更新：go1.2.2 (released 2014-05-05)</p>',6),re={href:"https://go.dev/doc/go1.2",target:"_blank",rel:"noopener noreferrer"},de={href:"https://go.dev/doc/devel/release#go1.2",target:"_blank",rel:"noopener noreferrer"},ue=o(`<p><strong>语言层面</strong></p><ol><li><p>对值为<code>nil</code>的变量进行操作会引发<code>panic</code></p></li><li><p>在对切片进行分隔时，可以使用第三个参数来限制被分割的切片容量从而更安全的使用切片</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> array <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token builtin">int</span>
slice <span class="token operator">:=</span> array<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><strong>其它</strong></p><ol><li><p>协程栈的最小内存大小由4KB提升到了8KB</p></li><li><p>将最大线程数限制在了10000</p></li><li><p>长时间运行的协程在发生函数调用时会被抢占（协作式抢占的首次引入）</p></li></ol><h2 id="_1-1" tabindex="-1"><a class="header-anchor" href="#_1-1" aria-hidden="true">#</a> 1.1</h2><p>首次发布：2013-05-13</p><p>最后更新：go1.1.2 (released 2013-08-13)</p>`,7),ge={href:"https://go.dev/doc/go1.1",target:"_blank",rel:"noopener noreferrer"},ke={href:"https://go.dev/doc/devel/release#go1.1",target:"_blank",rel:"noopener noreferrer"},he=e("p",null,[e("strong",null,"语言层面")],-1),ve=e("li",null,[n("一个数被0整除以前会抛出"),e("code",null,"panic"),n("，到了1.1直接无法通过编译。")],-1),_e=e("li",null,"方法可以作为一个值存在。",-1),me={href:"https://go.dev/ref/spec#Terminating_statements",target:"_blank",rel:"noopener noreferrer"},be=o('<p><strong>性能方面</strong></p><ol><li>使用go1.1的工具编译的go程序性能大概可以提升30%-40%</li></ol><p><strong>其它:</strong></p><ol><li>在64位机上堆内存的最大值提升到了几十GB</li><li>交叉编译时默认禁用cgo</li></ol><h2 id="_1-0" tabindex="-1"><a class="header-anchor" href="#_1-0" aria-hidden="true">#</a> 1.0</h2><p>首次发布：2012-03-28</p>',6),fe={href:"https://go.dev/doc/go1.0",target:"_blank",rel:"noopener noreferrer"},Ge={href:"https://go.dev/doc/devel/release#go1.0",target:"_blank",rel:"noopener noreferrer"},xe=o(`<p><strong>语言层面</strong></p><p>相较于预览版而言，语法上多了以下这些东西</p><ol><li><p>新增内置<code>append</code>函数，用于给切片添加元素</p></li><li><p>新增内置<code>close</code>函数，用于关闭管道</p></li><li><p>复合语义，在初始化切片，map，结构体字面量元素时，可以省略其类型，如下所示</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// 声明类型</span>
holiday1 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>Date<span class="token punctuation">{</span>
    Date<span class="token punctuation">{</span><span class="token string">&quot;Feb&quot;</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    Date<span class="token punctuation">{</span><span class="token string">&quot;Nov&quot;</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    Date<span class="token punctuation">{</span><span class="token string">&quot;Dec&quot;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// 省略类型</span>
holiday2 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>Date<span class="token punctuation">{</span>
    <span class="token punctuation">{</span><span class="token string">&quot;Feb&quot;</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string">&quot;Nov&quot;</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string">&quot;Dec&quot;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在<code>init</code>函数中使用的协程会直接启动，不需要再等待所有的包都初始化完毕。</p></li><li><p>新增<code>rune</code>类型，表示一个UTF-8字符</p></li><li><p>新增<code>error</code>内置接口，表示错误类型</p></li><li><p>新增<code>delete</code>内置函数用于删除map中的键值对</p></li><li><p>使用<code>for range</code>迭代map的顺序变得不可预测</p></li><li><p>支持同时给多个变量赋值</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>a := 1
b := 2
a, b = 3, 4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>变量隐藏问题：当函数的有具名返回值时，如果有任何返回值被隐藏了，则<code>return</code>语句必须携带返回值，否则编译不通过，下面是一个错误示例</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">Bug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> k <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> j <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">{</span> <span class="token comment">// Redeclares j.</span>
            k <span class="token operator">+=</span> i <span class="token operator">*</span> j
            <span class="token keyword">if</span> k <span class="token operator">&gt;</span> <span class="token number">100</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token comment">// Rejected: j is shadowed here.</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token comment">// OK: j is not shadowed here.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>允许复制带有私有字段的结构体值</p></li><li><p>在结构体和切片都是可比较元素组成的情况下，允许它们作为map的键，同时移除了函数和map的可比较性</p></li></ol><p>除了语言层面之外，go1.0在包的组织方式和标准库以及命令行方面相较于预览版本都有着非常大的改变，由于内容太多这里不再过多赘述，感兴趣可以自己去官网了解。</p><h2 id="pre" tabindex="-1"><a class="header-anchor" href="#pre" aria-hidden="true">#</a> pre</h2><p>在go1正式发布之前，所有的版本都被称为预览版本，对于这些预览版本官方会每周发布一个快照版本，其中比较重要的版本有</p><ul><li>r60(2011-09-07)，规定了else块现在必须加括号</li><li>r59(2011-08-01)，设计了新的结构体tag方案</li><li>r58(2011-06-29)，修复了滥用goto而导致内存未初始化的问题，新增了gui，exec包</li><li>r57(2011-05-03)，支持短变量多重赋值语法，重新设计了http，reflect包，将gotest作为一个go程序而非shell脚本</li><li>r56(2011-03-07)，第一个稳定版本</li></ul>`,7),ye={href:"https://go.dev/doc/devel/pre_go1",target:"_blank",rel:"noopener noreferrer"},we={href:"https://go.dev/doc/devel/weekly#2012-03-27",target:"_blank",rel:"noopener noreferrer"};function Re(Pe,qe){const s=i("ExternalLinkIcon");return l(),p("div",null,[r,d,u,e("p",null,[n("Go语言官方更新日志："),e("a",g,[n("Release History - The Go Programming Language"),a(s)])]),e("p",null,[n("Go官方采用语义化版本来进行版本标识，格式为v"),k,n("."),h,n("."),v,n(" (见"),e("a",_,[n("Semantic Versioning"),a(s)]),n(")，主版本的更新意味着发生了Breaking Change，即无法向下兼容的更新，次版本的更新意味着有新功能添加同时保持向下兼容，补丁版本的更新意味着有问题被修复同时保持向下兼容。")]),m,e("p",null,[n("Go2.0上一次提出草案是在2018年11月19日，那时还是处于go1.13版本，五年过后，版本已经迭代到了go1.21，Go2.0的各种想法已经通过增量更新的方式体现在了Go1.0上，创始人之一也曾明确表示未来可能并不会有Go2.0，Go将一直为保持向下兼容而努力(见"),e("a",b,[n("Go 1 and the Future of Go Programs"),a(s)]),n(")。")]),f,G,x,y,e("p",null,[n("go1.23版本的详细更新日志可以前往"),e("a",w,[n("Go 1.22 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",R,[n("Go1.23 - Release Patch"),a(s)]),n("了解。")]),P,e("ol",null,[e("li",null,[e("p",null,[n("for range支持迭代器函数，详细信息查看"),e("a",q,[n("Go Wiki: Rangefunc Experiment"),a(s)]),n("。")]),N])]),S,e("p",null,[n("go1.22版本的详细更新日志可以前往"),e("a",T,[n("Go 1.22 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",O,[n("Go1.22 - Release Patch"),a(s)]),n("了解。")]),D,e("p",null,[n("go1.21版本的详细更新日志可以前往"),e("a",L,[n("Go 1.21 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",C,[n("Go1.21 - Release Patch"),a(s)]),n("了解。")]),E,e("ol",null,[W,e("li",null,[e("p",null,[n("推出了"),j,n("循环变量改进的预览版本，这是一个困扰了Go开发者接近十年的问题，官方终于要解决了，详情见："),e("a",B,[n("LoopvarExperiment · golang/go Wiki (github.com)"),a(s)]),n("和"),e("a",H,[n("Proposal: Less Error-Prone Loop Variable Scoping (googlesource.com)"),a(s)])])]),M]),U,e("ol",null,[A,V,z,e("li",null,[n("在1.20还是实验性质的(Profile-guide optimization)PGO(见"),e("a",F,[n("Profile-guided optimization - The Go Programming Language"),a(s)]),n(")，1.21版本正式启用。在main包下包含"),I,n("文件会启用该功能，开启后性能可能会提升2%-7%。")]),X,K,Y]),Z,J,Q,e("p",null,[n("go1.20版本的详细更新日志可以前往"),e("a",$,[n("Go 1.20 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",nn,[n("Go1.20 - Release Patch"),a(s)]),n("了解。")]),en,e("ol",null,[sn,an,on,tn,ln,e("li",null,[n("支持收集程序代码覆盖率文件，见"),e("a",pn,[n("Coverage profiling support for integration tests - The Go Programming Language"),a(s)])]),cn]),rn,dn,un,e("p",null,[n("go1.19版本的详细更新日志可以前往"),e("a",gn,[n("Go 1.19 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",kn,[n("Go1.19 - Release Patch"),a(s)]),n("了解。")]),hn,e("p",null,[n("go1.18版本的详细更新日志可以前往"),e("a",vn,[n("Go 1.18 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",_n,[n("Go1.18 - Release Patch"),a(s)]),n("了解。")]),mn,e("p",null,[n("go1.17版本的详细更新日志可以前往"),e("a",bn,[n("Go 1.17 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",fn,[n("Go1.17 - Release Patch"),a(s)]),n("了解。")]),Gn,e("p",null,[n("go1.16版本的详细更新日志可以前往"),e("a",xn,[n("Go 1.16 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",yn,[n("Go1.16 - Release Patch"),a(s)]),n("了解。")]),wn,e("p",null,[n("go1.15版本的详细更新日志可以前往"),e("a",Rn,[n("Go 1.15 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",Pn,[n("Go1.15 - Release Patch"),a(s)]),n("了解。")]),qn,e("p",null,[n("go1.14版本的详细更新日志可以前往"),e("a",Nn,[n("Go 1.14 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",Sn,[n("Go1.14 - Release Patch"),a(s)]),n("了解。")]),Tn,e("p",null,[n("go1.13版本的详细更新日志可以前往"),e("a",On,[n("Go 1.13 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",Dn,[n("Go1.13 - Release Patch"),a(s)]),n("了解。")]),Ln,e("p",null,[n("go1.12版本的详细更新日志可以前往"),e("a",Cn,[n("Go 1.12 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",En,[n("Go1.12 - Release Patch"),a(s)]),n("了解。")]),Wn,e("p",null,[n("go1.11版本的详细更新日志可以前往"),e("a",jn,[n("Go 1.11 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",Bn,[n("Go1.11 - Release Patch"),a(s)]),n("了解。")]),Hn,e("p",null,[n("go1.10版本的详细更新日志可以前往"),e("a",Mn,[n("Go 1.10 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",Un,[n("Go1.10 - Release Patch"),a(s)]),n("了解。")]),An,e("p",null,[n("go1.9版本的详细更新日志可以前往"),e("a",Vn,[n("Go 1.9 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",zn,[n("Go1.9 - Release Patch"),a(s)]),n("了解。")]),Fn,e("p",null,[n("go1.8版本的详细更新日志可以前往"),e("a",In,[n("Go 1.8 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",Xn,[n("Go1.8 - Release Patch"),a(s)]),n("了解。")]),Kn,e("p",null,[n("go1.7版本的详细更新日志可以前往"),e("a",Yn,[n("Go 1.7 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",Zn,[n("Go1.7 - Release Patch"),a(s)]),n("了解。")]),Jn,e("p",null,[n("go1.6版本的详细更新日志可以前往"),e("a",Qn,[n("Go 1.6 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",$n,[n("Go1.6 - Release Patch"),a(s)]),n("了解。")]),ne,e("p",null,[n("go1.5版本的详细更新日志可以前往"),e("a",ee,[n("Go 1.5 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",se,[n("Go1.5 - Release Patch"),a(s)]),n("了解。")]),ae,e("p",null,[n("go1.4版本的详细更新日志可以前往"),e("a",oe,[n("Go 1.4 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",te,[n("Go1.4 - Release Patch"),a(s)]),n("了解。")]),le,e("p",null,[n("go1.3版本的详细更新日志可以前往"),e("a",pe,[n("Go 1.3 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",ie,[n("Go1.3 - Release Patch"),a(s)]),n("了解。")]),ce,e("p",null,[n("go1.2版本的详细更新日志可以前往"),e("a",re,[n("Go 1.2 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",de,[n("Go1.2 - Release Patch"),a(s)]),n("了解。")]),ue,e("p",null,[n("go1.1版本的详细更新日志可以前往"),e("a",ge,[n("Go 1.1 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",ke,[n("Go1.1 - Release Patch"),a(s)]),n("了解。")]),he,e("ol",null,[ve,_e,e("li",null,[n("引入了终止语句的概念，函数的返回规则更为宽松，"),e("a",me,[n("终止语句的定义 - go-sepc"),a(s)]),n("。")])]),be,e("p",null,[n("go1.0版本的详细更新日志可以前往"),e("a",fe,[n("Go 1.0 Release Notes"),a(s)]),n("查看，在其维护期间发布的所有补丁版本可以前往"),e("a",Ge,[n("Go1.0 - Release Patch"),a(s)]),n("了解。")]),xe,e("p",null,[n("预览版本的开发始于2009年12月09日，在go1于2012年3月28日正式发布之后停止，持续了接近三年的时间，往后不再记录每周快照版本。前往"),e("a",ye,[n("Pre-Go 1 Release History"),a(s)]),n("了解这些主要版本的信息，前往"),e("a",we,[n("Weekly Snapshot History"),a(s)]),n("了解全部预览版本的每周快照版本信息。")])])}const Se=t(c,[["render",Re],["__file","release.html.vue"]]);export{Se as default};
