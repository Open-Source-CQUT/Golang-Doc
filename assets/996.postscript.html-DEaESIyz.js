import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as l,a as t,b as r,e as i,f as h,r as p,o as g}from"./app-BpYYhTcg.js";const s={};function b(c,e){const o=p("RouteLink");return g(),n("div",null,[e[7]||(e[7]=l('<h1 id="后记" tabindex="-1"><a class="header-anchor" href="#后记"><span>后记</span></a></h1><p>如果你真的将语法篇和进阶篇都仔细阅读完了，并且动手敲了代码，那么你会认识到 Go 的语法其实并不难，特性也并不多，经验丰富的人可能几天就上手了，它完完全全是一门面向工程的语言，这一点你会在以后的编码中慢慢体会到。倘若你学习完后感到无处施展拳脚，想要更深一步学习，我可以给出下面几个学习路线和示例项目以供参考。</p><h2 id="web-开发" tabindex="-1"><a class="header-anchor" href="#web-开发"><span>Web 开发</span></a></h2><p>Web 开发是 Go 语言中一个很常见的应用场景，你可以尝试以下的几个开源 Web 框架：</p><ul><li><a href="https://github.com/gin-gonic/gin" target="_blank" rel="noopener noreferrer">Gin</a></li><li><a href="https://github.com/labstack/echo" target="_blank" rel="noopener noreferrer">Echo</a></li><li><a href="https://github.com/kataras/iris" target="_blank" rel="noopener noreferrer">Iris</a></li><li><a href="https://github.com/cloudwego/hertz" target="_blank" rel="noopener noreferrer">Hertz</a></li><li><a href="https://pkg.go.dev/net/http" target="_blank" rel="noopener noreferrer">net/http</a>， 或者不用框架，用 Go 自带的原生 HTTP 标准库</li></ul><p>如果你想要进行微服务开发，我推荐下面几个开源框架：</p><ul><li><a href="https://github.com/zeromicro/go-zero" target="_blank" rel="noopener noreferrer">GoZero</a></li><li><a href="https://github.com/go-kratos/kratos" target="_blank" rel="noopener noreferrer">go-kratos</a></li><li><a href="https://github.com/cloudwego/kitex" target="_blank" rel="noopener noreferrer">kitex</a></li></ul><p>然后你需要与数据库交互，我推荐下面几个开源库：</p><ul><li><a href="https://github.com/jmoiron/sqlx" target="_blank" rel="noopener noreferrer">sqlx</a></li><li><a href="https://github.com/go-gorm/gorm" target="_blank" rel="noopener noreferrer">Gorm</a></li><li><a href="https://gitea.com/xorm/xorm" target="_blank" rel="noopener noreferrer">Xorm</a></li><li><a href="https://github.com/ent/ent" target="_blank" rel="noopener noreferrer">Ent</a></li></ul><p>你可以参照下面这些项目来进行学习：</p><ul><li><a href="https://github.com/flipped-aurora/gin-vue-admin" target="_blank" rel="noopener noreferrer">gin vue admin</a></li><li><a href="https://github.com/Mikaelemmmm/go-zero-looklook" target="_blank" rel="noopener noreferrer">go-zero-looklook</a></li><li><a href="https://github.com/LyricTian/gin-admin" target="_blank" rel="noopener noreferrer">gin-admin</a>，单体 Web 项目我比较推荐参考该项目进行学习</li><li><a href="https://github.com/limes-cloud/go-platform" target="_blank" rel="noopener noreferrer">go-platform</a>，微服务项目我推荐参考该项目进行学习</li></ul><h2 id="im-通讯" tabindex="-1"><a class="header-anchor" href="#im-通讯"><span>IM 通讯</span></a></h2><p>使用 Go 进行 IM 开发，推荐下面这些开源项目：</p><ul><li><a href="https://github.com/openimsdk/open-im-server" target="_blank" rel="noopener noreferrer">open-im-server</a></li><li><a href="https://github.com/alberliu/gim" target="_blank" rel="noopener noreferrer">gim</a></li><li><a href="https://github.com/cherish-chat/xxim-server" target="_blank" rel="noopener noreferrer">xxim-server</a></li><li><a href="https://github.com/LockGit/gochat" target="_blank" rel="noopener noreferrer">gochat</a></li><li><a href="https://github.com/TangSengDaoDao/TangSengDaoDaoServer" target="_blank" rel="noopener noreferrer">TangSengDaoDaoServer</a></li></ul><h2 id="网络编程" tabindex="-1"><a class="header-anchor" href="#网络编程"><span>网络编程</span></a></h2><p>Go 在网络编程这块也有非常多的应用，下面给出一些参考的开源项目：</p><ul><li><a href="https://github.com/aceld/zinx" target="_blank" rel="noopener noreferrer">zinx</a></li><li><a href="https://github.com/ehang-io/nps" target="_blank" rel="noopener noreferrer">nps</a></li><li><a href="https://github.com/caddyserver/caddy" target="_blank" rel="noopener noreferrer">caddy</a></li><li><a href="https://github.com/snail007/goproxy" target="_blank" rel="noopener noreferrer">goproxy</a></li><li><a href="https://github.com/lxzan/gws" target="_blank" rel="noopener noreferrer">gws</a></li><li><a href="https://github.com/Allenxuxu/gev" target="_blank" rel="noopener noreferrer">gev</a></li></ul><h2 id="游戏服务器" tabindex="-1"><a class="header-anchor" href="#游戏服务器"><span>游戏服务器</span></a></h2><p>在游戏服务器这个领域，有越来越多的企业转到 Go 这个方向</p><ul><li><a href="https://github.com/googleforgames/agones" target="_blank" rel="noopener noreferrer">agones</a></li><li><a href="https://github.com/name5566/leaf" target="_blank" rel="noopener noreferrer">leaf</a></li><li><a href="https://github.com/lonng/nano" target="_blank" rel="noopener noreferrer">nano</a></li><li><a href="https://github.com/xiaonanln/goworld" target="_blank" rel="noopener noreferrer">goworld</a></li><li><a href="https://github.com/topfreegames/pitaya" target="_blank" rel="noopener noreferrer">pitaya</a></li><li><a href="https://github.com/duanhf2012/origin" target="_blank" rel="noopener noreferrer">origin</a></li><li><a href="https://github.com/xtaci/gonet" target="_blank" rel="noopener noreferrer">gonet</a></li></ul><h2 id="数据库开发" tabindex="-1"><a class="header-anchor" href="#数据库开发"><span>数据库开发</span></a></h2><p>数据库开发需要一定的技术功底，基于 Go 语言的数据库或引擎同样也不少，光是阅读它们的源代码就需要花费不少时间</p><ul><li><a href="https://github.com/dgraph-io/badger" target="_blank" rel="noopener noreferrer">badger</a>，高速 kv 数据库</li><li><a href="https://github.com/dgraph-io/dgraph" target="_blank" rel="noopener noreferrer">dgraph</a>，图数据库</li><li><a href="https://github.com/cayleygraph/cayley" target="_blank" rel="noopener noreferrer">cayley</a>，图数据库</li><li><a href="https://github.com/etcd-io/etcd" target="_blank" rel="noopener noreferrer">etcd</a>，分布式键值数据库</li><li><a href="https://github.com/rosedblabs/rosedb" target="_blank" rel="noopener noreferrer">rosedb</a>，键值数据库，入门的最佳选择</li><li><a href="https://github.com/nutsdb/nutsdb" target="_blank" rel="noopener noreferrer">nutsdb</a>，键值数据库</li><li><a href="https://github.com/prometheus/prometheus" target="_blank" rel="noopener noreferrer">prometheus</a>，时序数据库</li><li><a href="https://github.com/pingcap/tidb" target="_blank" rel="noopener noreferrer">tidb</a>，时序数据库</li><li><a href="https://github.com/cockroachdb/cockroach" target="_blank" rel="noopener noreferrer">cockroach</a>，分布式 SQL 数据库</li><li><a href="https://github.com/rqlite/rqlite" target="_blank" rel="noopener noreferrer">rqlite</a>，基于 SQLite 的分布式数据库</li></ul><h2 id="命令行工具" tabindex="-1"><a class="header-anchor" href="#命令行工具"><span>命令行工具</span></a></h2><p>Go 非常适合用于命令行 CLI 工具开发，下面推荐几个命令行开发框架或库：</p><ul><li><a href="https://pkg.go.dev/flag" target="_blank" rel="noopener noreferrer">flag</a>，flag 标准库</li><li><a href="https://github.com/spf13/cobra" target="_blank" rel="noopener noreferrer">cobra</a>，强烈推荐使用 cobra 进行 CLI 开发，有许多著名项目都是基于 cobra，比如 Docker，K8S 等</li><li><a href="https://github.com/jedib0t/go-pretty" target="_blank" rel="noopener noreferrer">go-pretty</a>，用于在命令行进行美观的输出</li><li><a href="https://github.com/urfave/cli" target="_blank" rel="noopener noreferrer">cli</a>，轻量级的命令行框架</li><li><a href="https://github.com/alecthomas/kingpin" target="_blank" rel="noopener noreferrer">kingpin</a>，强大灵活的命令行解析库</li></ul><p>由于 cobra 十分常用，基于它进行命令行开发的项目非常多，随便都可以找到，下面只是一些参考项目：</p><ul><li><a href="https://github.com/dharmeshkakadia/cobra-example" target="_blank" rel="noopener noreferrer">cobra-example</a></li><li><a href="https://github.com/Open-Source-CQUT/govm" target="_blank" rel="noopener noreferrer">govm</a></li><li><a href="https://github.com/gohugoio/hugo" target="_blank" rel="noopener noreferrer">hugo</a></li><li><a href="https://github.com/go-delve/delve" target="_blank" rel="noopener noreferrer">delve</a></li></ul><p>上面只是列出了比较常见的领域，你可以看到的是 Go 在服务端领域应用较为广泛，而客户端则较少，其实 Go 在其他领域也有不少的应用，比如 webrtc，区块链，对象存储，云计算等等，感兴趣可以在 Github 上自行了解。</p>',29)),t("p",null,[e[1]||(e[1]=r("最后，如果你想更深入的了解Go语言的实现细节，比如")),e[2]||(e[2]=t("code",null,"slice",-1)),e[3]||(e[3]=r("和")),e[4]||(e[4]=t("code",null," map",-1)),e[5]||(e[5]=r("的底层数据结构，协程调度器的实现，GC垃圾回收的过程等等，前往")),i(o,{to:"/essential/impl/"},{default:h(()=>e[0]||(e[0]=[r("实现原理")])),_:1}),e[6]||(e[6]=r("章节了解更多内容。"))])])}const u=a(s,[["render",b],["__file","996.postscript.html.vue"]]),d=JSON.parse('{"path":"/essential/senior/996.postscript.html","title":"后记","lang":"zh-CN","frontmatter":{"description":"后记 如果你真的将语法篇和进阶篇都仔细阅读完了，并且动手敲了代码，那么你会认识到 Go 的语法其实并不难，特性也并不多，经验丰富的人可能几天就上手了，它完完全全是一门面向工程的语言，这一点你会在以后的编码中慢慢体会到。倘若你学习完后感到无处施展拳脚，想要更深一步学习，我可以给出下面几个学习路线和示例项目以供参考。 Web 开发 Web 开发是 Go 语...","head":[["meta",{"property":"og:url","content":"https://golang.halfiisland.com/essential/senior/996.postscript.html"}],["meta",{"property":"og:site_name","content":"Golang 中文学习文档"}],["meta",{"property":"og:title","content":"后记"}],["meta",{"property":"og:description","content":"后记 如果你真的将语法篇和进阶篇都仔细阅读完了，并且动手敲了代码，那么你会认识到 Go 的语法其实并不难，特性也并不多，经验丰富的人可能几天就上手了，它完完全全是一门面向工程的语言，这一点你会在以后的编码中慢慢体会到。倘若你学习完后感到无处施展拳脚，想要更深一步学习，我可以给出下面几个学习路线和示例项目以供参考。 Web 开发 Web 开发是 Go 语..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-27T15:07:36.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-27T15:07:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"后记\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-27T15:07:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"寒江蓑笠翁\\",\\"url\\":\\"https://246859.github.io/\\",\\"email\\":\\"2633565580@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"Web 开发","slug":"web-开发","link":"#web-开发","children":[]},{"level":2,"title":"IM 通讯","slug":"im-通讯","link":"#im-通讯","children":[]},{"level":2,"title":"网络编程","slug":"网络编程","link":"#网络编程","children":[]},{"level":2,"title":"游戏服务器","slug":"游戏服务器","link":"#游戏服务器","children":[]},{"level":2,"title":"数据库开发","slug":"数据库开发","link":"#数据库开发","children":[]},{"level":2,"title":"命令行工具","slug":"命令行工具","link":"#命令行工具","children":[]}],"git":{"createdTime":1727344372000,"updatedTime":1735312056000,"contributors":[{"name":"246859","username":"246859","email":"2633565580@qq.com","commits":3,"url":"https://github.com/246859"},{"name":"Mister-Hope","username":"Mister-Hope","email":"mister-hope@outlook.com","commits":1,"url":"https://github.com/Mister-Hope"}]},"readingTime":{"minutes":6.55,"words":982},"filePathRelative":"essential/senior/996.postscript.md","localizedDate":"2024年9月26日","autoDesc":true,"excerpt":"\\n<p>如果你真的将语法篇和进阶篇都仔细阅读完了，并且动手敲了代码，那么你会认识到 Go 的语法其实并不难，特性也并不多，经验丰富的人可能几天就上手了，它完完全全是一门面向工程的语言，这一点你会在以后的编码中慢慢体会到。倘若你学习完后感到无处施展拳脚，想要更深一步学习，我可以给出下面几个学习路线和示例项目以供参考。</p>\\n<h2>Web 开发</h2>\\n<p>Web 开发是 Go 语言中一个很常见的应用场景，你可以尝试以下的几个开源 Web 框架：</p>\\n<ul>\\n<li><a href=\\"https://github.com/gin-gonic/gin\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Gin</a></li>\\n<li><a href=\\"https://github.com/labstack/echo\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Echo</a></li>\\n<li><a href=\\"https://github.com/kataras/iris\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Iris</a></li>\\n<li><a href=\\"https://github.com/cloudwego/hertz\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Hertz</a></li>\\n<li><a href=\\"https://pkg.go.dev/net/http\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">net/http</a>， 或者不用框架，用 Go 自带的原生 HTTP 标准库</li>\\n</ul>"}');export{u as comp,d as data};
